var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCCQQHCCCCCCISSSESSEESSSSSFNNNNHNNNNEECFEOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEECEEECMMCMMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNONNNNNNONNNHNNNNNONOONNNNNNNNNNNONNONFFNNNNNNNNNNNNNNNNNNNNNNHHFNNNNNHNNNNNEEEEEEEEEEEEECECECHECCEEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNHHHHEEEEEECCCCFFNNNNNNONNNNNNNNNNNOKFFFNNNNNNNNNONNNMNNOONNNNNNNNNNNMNNOFFNNNNONNNONNNNNNNNNNOFNNNNONNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSCCCHCHHHHHHHHHHHHHHHHHHHHHHHHHHHEFEEEEEEOHEHNNHCHEEEEEENHNCNECEECCEHEEECHCECNNNEFNNNNNOOONNNNSFFFFFFOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNHHNNHONOOHNNNNNNNNNNNNNNNNNNNNNOHNFFFOONHNNNNNNNNNHNNNHNNNNHONHHNNNNNNNNNHFFNNNNNNOONNOONNNNNNONNNOOONOOOOOONNNNNNNFFONNNNNOHHHHHHNNNNONNNHHNHNNNNNNTTTTTFNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPPFFGNNNNNNNNNONNNNNNONNNNONOOOONONNNNNNNNNSSFFOHNNNNHNNNONNHHNNNHHONNNNNNECHHHHHHHFNNNNNNOOONOONNNO","n":["board","clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","File","OpenFlags","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone_into","eq","from","from","from","head","into","into","into","make_pipe","new","read","read_byte","read_end_with_buffer","readable","readable","set_write_end","status","tail","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","writable","writable","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","backtrace","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","Condvar","Mutex","MutexBlocking","MutexSpin","Semaphore","UPSafeCell","condvar","mutex","semaphore","up","Condvar","CondvarInner","borrow","borrow","borrow_mut","borrow_mut","from","from","inner","into","into","new","signal","try_from","try_from","try_into","try_into","type_id","type_id","wait","wait_queue","Mutex","MutexBlocking","MutexBlockingInner","MutexSpin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","inner","into","into","into","lock","lock","lock","locked","locked","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock","unlock","unlock","wait_queue","Semaphore","SemaphoreInner","borrow","borrow","borrow_mut","borrow_mut","count","down","from","from","inner","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","up","wait_queue","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_CONDVAR_CREATE","SYSCALL_CONDVAR_SIGNAL","SYSCALL_CONDVAR_WAIT","SYSCALL_DUP","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GETTID","SYSCALL_GET_TIME","SYSCALL_KILL","SYSCALL_MUTEX_CREATE","SYSCALL_MUTEX_LOCK","SYSCALL_MUTEX_UNLOCK","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SEMAPHORE_CREATE","SYSCALL_SEMAPHORE_DOWN","SYSCALL_SEMAPHORE_UP","SYSCALL_SLEEP","SYSCALL_THREAD_CREATE","SYSCALL_WAITPID","SYSCALL_WAITTID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","sync","syscall","thread","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_waitpid","sys_yield","sys_condvar_create","sys_condvar_signal","sys_condvar_wait","sys_mutex_create","sys_mutex_lock","sys_mutex_unlock","sys_semaphore_create","sys_semaphore_down","sys_semaphore_up","sys_sleep","sys_gettid","sys_thread_create","sys_waittid","IDLE_PID","INITPROC","KernelStack","PidHandle","SignalFlags","TaskContext","TaskControlBlock","TaskStatus","__private_field","add_initproc","add_task","block_current_and_run_next","borrow","borrow_mut","check_signals_of_current","context","current_add_signal","current_kstack_top","current_process","current_task","current_trap_cx","current_trap_cx_user_va","current_user_token","deref","exit_current_and_run_next","from","id","into","kstack_alloc","manager","pid2process","pid_alloc","process","processor","remove_from_pid2process","remove_inactive_task","remove_task","run_tasks","schedule","signal","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","wakeup_task","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","IDLE_PID","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","TaskUserRes","__private_field","__private_field","alloc","alloc_tid","alloc_user_res","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","dealloc_tid","dealloc_user_res","deref","deref","drop","drop","drop","from","from","from","from","from","from","get_top","into","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","new","pid_alloc","process","push_on_top","recycled","tid","trap_cx_bottom_from_tid","trap_cx_ppn","trap_cx_user_va","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ustack_base","ustack_base","ustack_bottom_from_tid","ustack_top","PID2PCB","TASK_MANAGER","TaskManager","__private_field","__private_field","add","add_task","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","fetch","fetch_task","from","from","from","insert_into_pid2process","into","into","into","new","pid2process","ready_queue","remove","remove_from_pid2process","remove_task","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wakeup_task","ProcessControlBlock","ProcessControlBlockInner","alloc_fd","alloc_tid","borrow","borrow","borrow_mut","borrow_mut","children","condvar_list","dealloc_tid","exec","exit_code","fd_table","fork","from","from","get_task","get_user_token","getpid","inner","inner_exclusive_access","into","into","is_zombie","memory_set","mutex_list","new","parent","pid","semaphore_list","signals","task_res_allocator","tasks","thread_count","try_from","try_from","try_into","try_into","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_kstack_top","current_process","current_task","current_trap_cx","current_trap_cx_user_va","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SignalFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","check_error","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","__switch","Blocked","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","exit_code","from","from","from","get_status","get_trap_cx","get_user_token","inner","inner_exclusive_access","into","into","into","kstack","new","process","res","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","TIMERS","TimerCondVar","__private_field","add_timer","borrow","borrow","borrow_mut","borrow_mut","check_timer","cmp","deref","eq","expire_ms","from","from","get_time","get_time_ms","into","into","partial_cmp","remove_timer","set_next_trigger","task","try_from","try_from","try_into","try_into","type_id","type_id","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[18,"os::board"],[22,"os::config"],[32,"os::console"],[42,"os::drivers"],[45,"os::drivers::block"],[58,"os::drivers::block::virtio_blk"],[92,"os::fs"],[106,"os::fs::inode"],[202,"os::fs::pipe"],[256,"os::fs::stdio"],[280,"os::lang_items"],[282,"os::logging"],[294,"os::mm"],[321,"os::mm::address"],[444,"os::mm::frame_allocator"],[493,"os::mm::heap_allocator"],[498,"os::mm::memory_set"],[631,"os::mm::page_table"],[758,"os::sbi"],[762,"os::sync"],[772,"os::sync::condvar"],[793,"os::sync::mutex"],[830,"os::sync::semaphore"],[852,"os::sync::up"],[863,"os::syscall"],[895,"os::syscall::fs"],[901,"os::syscall::process"],[909,"os::syscall::sync"],[919,"os::syscall::thread"],[922,"os::task"],[970,"os::task::context"],[983,"os::task::id"],[1063,"os::task::manager"],[1103,"os::task::process"],[1144,"os::task::processor"],[1177,"os::task::signal"],[1234,"os::task::switch"],[1235,"os::task::task"],[1279,"os::timer"],[1310,"os::trap"],[1319,"os::trap::context"],[1336,"core::fmt"],[1337,"core::result"],[1338,"core::any"],[1339,"easy_fs::block_dev"],[1340,"alloc::sync"],[1341,"alloc::vec"],[1342,"core::cmp"],[1343,"easy_fs::vfs"],[1344,"core::iter::traits::collect"],[1345,"core::option"],[1346,"core::hash"],[1347,"core::panic::panic_info"],[1348,"log"],[1349,"core::marker"],[1350,"core::clone"],[1351,"core::alloc::layout"],[1352,"alloc::string"],[1353,"core::cell"],[1354,"alloc::collections::btree::map"],[1355,"alloc::collections::binary_heap"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,104,12,18,104,12,12,104,104,18,104,12,18,104,12,18,104,18,18,104,12,18,104,12,18,104,12,104,18,0,0,0,0,0,0,0,0,0,21,21,0,21,21,24,0,0,0,24,24,0,24,24,27,24,24,24,24,24,24,24,24,24,34,105,27,24,34,105,27,24,24,24,24,24,24,27,24,24,24,24,24,24,24,24,24,34,105,27,24,24,24,24,24,24,34,105,24,24,24,34,105,27,24,24,24,0,34,24,105,0,24,34,34,24,34,34,24,24,24,24,24,24,24,34,105,27,24,34,105,27,24,34,105,27,24,24,34,34,34,37,37,37,0,0,0,0,36,36,36,36,38,36,37,38,36,37,38,37,37,37,38,36,37,36,38,36,37,0,36,38,36,38,38,38,36,36,36,37,38,36,37,38,36,37,38,36,37,38,38,38,36,36,38,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,0,0,0,42,42,42,42,42,0,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,58,45,46,47,48,49,58,45,46,47,48,49,45,46,45,46,47,48,49,45,46,47,48,49,45,46,47,48,58,58,45,46,47,48,45,46,45,46,47,48,58,45,45,45,46,46,46,47,47,47,48,48,48,49,47,49,45,47,47,45,49,48,58,45,46,47,48,49,58,49,106,49,58,49,58,45,46,45,46,47,48,106,49,50,47,48,45,46,47,48,49,58,45,46,47,48,49,58,45,46,47,48,49,58,45,46,47,48,49,0,0,0,0,0,61,59,60,13,60,61,13,60,61,60,107,59,60,61,13,60,107,13,0,0,0,13,60,61,60,0,13,60,61,59,13,60,13,60,107,13,60,61,13,60,61,13,60,61,0,0,0,0,0,65,65,0,0,0,0,0,64,64,64,64,68,63,64,63,64,64,64,64,64,64,64,64,63,66,68,65,64,63,66,68,65,64,65,64,65,64,64,64,64,66,66,68,64,0,0,0,64,65,64,0,0,64,65,64,64,64,64,64,63,66,68,65,64,66,64,64,64,63,63,64,64,64,63,64,64,63,66,68,65,64,64,64,0,66,66,66,63,66,66,63,63,64,63,64,63,63,0,64,63,0,0,64,0,0,0,64,64,64,65,64,64,63,63,63,66,68,65,64,63,66,68,65,64,63,66,68,65,64,64,66,66,66,69,69,69,0,0,0,69,69,0,0,69,69,69,69,69,69,69,69,69,69,56,69,69,67,22,70,69,56,67,22,70,69,56,22,70,69,56,69,56,69,69,69,70,70,69,69,56,69,56,69,67,67,56,69,69,69,69,69,67,67,22,70,69,56,69,69,69,69,67,69,69,69,69,67,22,70,69,56,22,70,69,69,56,22,67,67,22,56,70,69,69,56,56,69,67,69,69,69,69,69,56,69,67,67,67,0,0,0,0,67,22,70,69,56,67,22,70,69,56,67,22,70,69,56,69,67,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,108,72,108,72,108,72,72,108,72,72,72,108,72,108,72,108,72,108,0,0,0,0,74,75,109,74,75,109,74,75,109,75,74,75,109,73,74,75,74,109,74,75,74,75,109,74,75,109,74,75,109,73,74,75,109,0,0,76,110,76,110,110,76,76,110,76,76,110,76,76,110,76,110,76,110,76,110,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,80,80,0,0,0,0,0,0,0,0,0,80,0,80,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,0,0,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,0,0,86,87,84,85,85,84,88,89,85,86,87,84,88,89,85,86,87,84,84,85,85,86,87,88,89,85,84,88,89,85,86,87,89,84,88,89,85,86,87,0,0,84,85,0,85,89,84,85,0,85,85,84,88,89,85,86,87,84,88,89,85,86,87,84,88,89,85,86,87,85,85,0,85,0,0,0,92,93,91,0,91,92,93,91,92,93,92,93,91,0,91,92,93,0,91,92,93,91,0,91,91,0,0,91,92,93,91,92,93,91,92,93,0,0,0,95,95,81,95,81,95,95,95,95,81,95,95,81,81,95,95,95,81,81,81,81,95,95,95,95,81,95,81,95,95,95,95,95,81,95,81,95,81,95,0,0,98,96,98,96,98,96,96,0,0,0,0,0,0,98,96,98,96,96,96,98,96,0,0,96,0,96,98,96,98,96,98,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,99,99,99,0,0,0,82,100,99,82,100,99,99,99,99,100,82,100,99,100,100,82,82,82,82,100,99,82,82,82,100,100,100,99,100,82,100,99,82,100,99,82,100,99,0,0,0,0,102,0,101,102,101,102,0,101,102,101,101,101,102,0,0,101,102,101,0,0,101,101,102,101,102,101,102,0,0,0,0,0,0,0,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97],"f":"`{{}b}`````````{{}d}`````````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}``````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730`````````{{BjBl}B`}{BjBn}`01``````````{{}C`}{{C`C`}C`}{{C`C`}b}10{C`Cb}`21{ce{}{}}0000000{C`C`}{{ce}b{}{}}{{C`C`}Cd}2{{C`C`}Bn}{Cf{{Af{Ch}}}}891{{C`c}b{{Cl{}{{Cj{C`}}}}}}{{C`Cn}A`}0000{cc{}}000{Cb{{D`{C`}}}}{CbC`}0{cC`{{Cl{}{{Cj{C`}}}}}}{{C`c}bDb}``>?8<<<<{C`Bn}0{{}b}{{BnBn{Af{Ch}}}Dd}>`{{nC`}{{D`{{Af{Dd}}}}}}{{C`C`}{{D`{Cd}}}}{{DdBl}B`}{Dd{{Al{Bf}}}}{C`{{Df{BnBn}}}}{DdBn}`{{C`C`}b}{{C`C`Bn}b}{{C`C`}C`}20{ce{}{}}3{c{{h{e}}}{}{}}0000000{cj{}}00036`9```````{DhBn}`{DhB`}0444444`{DjDj}{{ce}b{}{}}{{DjDj}Bn}{cc{}}00`888{{}{{Df{{Af{Dl}}{Af{Dl}}}}}}{{}Dh}{{DlBl}B`}{DhBf}{{{Af{{An{Dh}}}}}Dl}{DlBn}`{{Dh{Af{Dl}}}b}``?>>>>>>===1`4{{DhBf}b}`3``{ce{}{}}0009900{{DnBl}B`}{{E`Bl}B`}{DnBn}{E`Bn}{c{{h{e}}}{}{}}000{cj{}}03254{{}b}{Ebd}`88{{EdEf}Bn}{Edb}{cc{}}4;{{EdEh}b}776``````````````````5````````````````````{EjBn}{ElBn}>>>>>>>>>>>>{EjEn}{ElF`}{EjEj}{ElEl}{EnEn}{F`F`}{{{Fb{c}}}{{Fb{c}}}{FdFfFhFjFlFn}}{{ce}b{}{}}0000{{EjEj}Cd}{{ElEl}Cd}{{EnEn}Cd}{{F`F`}Cd}``{{EjEj}Bn}{{ElEl}Bn}{{EnEn}Bn}{{F`F`}Bn}?>{{EjCn}A`}{{ElCn}A`}{{EnCn}A`}{{F`Cn}A`}{cc{}}0{EnEj}{B`Ej}{B`El}3{F`El}4{EjEn}{B`En}6{ElF`}{B`F`}8{En{{Bh{Bf}}}}{{{Fb{c}}}c{FdFfFhFjFl}}{Ejc{}}{Enc{}}{En{{Bh{G`}}}}23{F`{{Gb{B`}}}}{ce{}{}}000000{{{Fb{c}}}e{FdFfFhFjFl}{}}``{{cc}{{Gd{c}}}{FdFfFhFjFl}}{{cc}{{Fb{c}}}{FdFfFhFjFl}}{{{Gd{c}}}{{D`{e}}}{FdFfFhFjFl}{}}{EjB`}{ElB`}{{EjEj}{{D`{Cd}}}}{{ElEl}{{D`{Cd}}}}{{EnEn}{{D`{Cd}}}}{{F`F`}{{D`{Cd}}}}``{Fdb}{Enb}{F`b}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Gf{{D`{En}}}}{Gh{{D`{En}}}}{ce{}{}}00000``{{GfEn}b}{{GhEn}b}{Gj{{An{Gh}}}}{Ajb}``{{AjCn}A`}{{}{{D`{Aj}}}}{{}b}={cc{}}00{{GhEnEn}b}2999{{}Gf}{EnAj}{{}Gh}```{c{{h{e}}}{}{}}00000{cj{}}00``{Gld}88````````````{Gnb}{{}H`}`{{H`H`}H`}{{H`H`}b}10{H`Bf}`21{ce{}{}}000000000{HbHb}{H`H`}{{ce}b{}{}}0{{H`H`}Cd}2{{H`H`}Bn}{{HdHf{Bh{Bf}}}b}`{Hh{{Af{{An{Gn}}}}}}:```;{{HbHb}Bn}3``{{H`c}b{{Cl{}{{Cj{H`}}}}}}{{HbCn}A`}{{H`Cn}A`}0000{cc{}}0000{HdHd}{Bf{{D`{H`}}}}{BfH`}0{{{Bh{Bf}}}{{Df{GnB`B`}}}}{GnGn}{cH`{{Cl{}{{Cj{H`}}}}}}{{H`c}bDb}{{H`H`}b}{{GnElElH`}b}{{H`H`}H`}{{H`H`}Bn}{ce{}{}}0000{H`Bn}0{{}B`}{{HdHf}b}{{HdHfF`}b}`{Gnb}`{{ElElHbH`}Hd}{{}Gn}0{H`H`}`{{H`H`}{{D`{Cd}}}}{{GnHd{D`{{Bh{Bf}}}}}b}5{{}b}?{{GnF`}b}``{{H`H`Bn}b}```?{{H`H`}b}{{H`H`}H`}??1{GnB`}{{GnF`}{{D`{G`}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{HdHf}b}{{HdHfF`}b}``````````````{{}Hj}{{HjHj}Hj}{{HjHj}b}10{HjBf}``21{ce{}{}}000000000``{HjHj}{G`G`}{{ce}b{}{}}0{{HjHj}Cd}3{{HjHj}Bn}``89{{}G`}1{G`Bn}{{Hjc}b{{Cl{}{{Cj{Hj}}}}}}{{HfF`}{{D`{G`}}}}0{G`Hj}{{HjCn}A`}0000`{cc{}}0000{Bf{{D`{Hj}}}}{BfHj}0{cHj{{Cl{}{{Cj{Hj}}}}}}{B`Hf}{{Hjc}bDb}{{HjHj}b}{{HjHj}Hj}>{ce{}{}}0000{Blc{}}1{HjBn}0?{BlB`}{{HfF`EnHj}b}{{}Hf}{{{Al{{Bh{Bf}}}}}Bl}{{EnHj}G`}{Hl{{D`{c}}}{}}{HjHj}{{HjHj}{{D`{Cd}}}}{G`En}{G`Bn}>`{{HjHjBn}b}>?>==?{HfB`}{{HfF`}{{D`{G`}}}}{{HfEl}{{D`{Ej}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Hn}{c{{h{e}}}{}{}}000000000{cj{}}0000{{HjHj}Hj}{{HfF`}b};{{}B`}{B`b}0{Bnd}````````````{ce{}{}}000{cc{}}0`11{{}I`}{I`b}::::99{{I`{Af{Ib}}}b}`````444444333`444{Ibb}{Idb}{Ifb}``{{}Id}{{}If}{c{{h{e}}}{}{}}00000{cj{}}00654```;;;;`{Ihb};;`<<{B`Ih}3333221``=={{{An{c}}}{{Ij{c}}}{}}=`>{c{{An{c}}}{}}554``````````````````````````````{{B`{Gb{B`}}}Il}`{B`Il}0{{BfCb}Il}1{{B`BfB`}Il}0{{BfB`}Il}{Bbd}{{}Il}00{{B`Cb}Il}{{IlBb}Il}227{{B`B`}Il}{BnIl}99999941{B`Bb}`````````{{}b}`0{ce{}{}}0{{}{{D`{{Df{Bbn}}}}}}`{Inb}``````{J`{{Af{Jb}}}}{Bbb}{cc{}}`5```````{{{Af{Jd}}}b}````7```{c{{h{e}}}{}{}}0{cj{}}``883{B`Jf}9```221{{}Jf}`````````{JhB`}{Jjb}0<<<<<<<<<<<<`{{JhB`}b}11{Jl{{An{Jh}}}}{Jn{{An{Jh}}}}{K`b}{Kbb}5<<<<<<{KbB`}{ce{}{}}00000{B`{{Df{B`B`}}}}{{}Kb}{{}Jh}{{{Af{Jb}}B`Bn}Jj}{{}K`}`{{Kbc}{}Kd}``{B`B`}{JjEn}{JjB`}{c{{h{e}}}{}{}}00000000000{cj{}}000002`{{B`B`}B`}3`````{{Kf{Af{Jd}}}b}{{{Af{Jd}}}b}>>>>>>{Kh{{An{Kf}}}}{Kj{{An{{Kl{B`{Af{Jb}}}}}}}}{Kf{{D`{{Af{Jd}}}}}}{{}{{D`{{Af{Jd}}}}}}{cc{}}00{{B`{Af{Jb}}}b}{ce{}{}}00{{}Kf}{B`{{D`{{Af{Jb}}}}}}`:{B`b}:>>>>>>===:``{KnB`}04444``{{KnB`}b}{{{Af{Jb}}{Bh{Bf}}{Al{Hn}}}b}``{{{Af{Jb}}}{{Af{Jb}}}}99{{KnB`}{{Af{Jd}}}}4{JbB`}`{Jb{{Ij{Kn}}}}::```{{{Bh{Bf}}}{{Af{Jb}}}}``````7{c{{h{e}}}{}{}}000{cj{}}0```===={L`{{D`{{Af{Jd}}}}}}`{{}B`}{{}{{Af{Jb}}}}{{}{{D`{{Af{Jd}}}}}}{{}Lb}33{Ld{{An{L`}}}}{cc{}}0{L`Jf}`{ce{}{}}0{{}L`}{{}b}{Jfb};8====<<``````{{}In}{{InIn}In}{{InIn}b}10{InCb}`2177{In{{D`{{Df{Bbn}}}}}}{InIn}{{ce}b{}{}}{{InIn}Cd}2{{InIn}Bn}780{{Inc}b{{Cl{}{{Cj{In}}}}}}{{InCn}A`}0000{cc{}}{Cb{{D`{In}}}}{CbIn}0{cIn{{Cl{}{{Cj{In}}}}}}{{Inc}bDb}=>7{ce{}{}}{InBn}0<{{InIn}{{D`{Cd}}}}{{InIn}b}{{InInBn}b}{{InIn}In}2052{c{{h{e}}}{}{}}0{cj{}}2```````777777{LfLf}{{ce}b{}{}}{{LfLf}Bn}`???{LhLf}{LhLb}{JdB`}`{Jd{{Ij{Lh}}}}>>>`{{{Af{Jb}}B`Bn}Jd}````?`999999888`````{{B`{Af{Jd}}}b}{ce{}{}}000{{}b}{{LjLj}Cd}{Ll{{An{{Ln{Lj}}}}}}{{LjLj}Bn}`{cc{}}0{{}B`}066{{LjLj}{{D`{Cd}}}}{{{Af{Jd}}}b}7`{c{{h{e}}}{}{}}000{cj{}}0``9999{{}d}00`{{B`B`B`B`B`}Lb}<<{{LbCn}A`}8=```{{LbB`}b}``554`","D":"BA`","p":[[1,"unit"],[1,"never"],[5,"Arguments",1336],[6,"Result",1337],[5,"TypeId",1338],[5,"Stdout",32],[1,"str"],[8,"Result",1336],[5,"BLOCK_DEVICE",45],[10,"BlockDevice",1339],[5,"Arc",1340],[5,"QUEUE_FRAMES",58],[5,"FrameTracker",444],[5,"Vec",1341],[5,"UPSafeCell",852],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",58],[1,"u8"],[1,"slice"],[10,"File",92],[5,"UserBuffer",631],[1,"bool"],[5,"OpenFlags",106],[1,"u32"],[6,"Ordering",1342],[5,"ROOT_INODE",106],[5,"Inode",1343],[17,"Item"],[10,"IntoIterator",1344],[5,"Formatter",1336],[6,"Option",1345],[10,"Hasher",1346],[5,"OSInode",106],[1,"tuple"],[5,"PipeRingBuffer",202],[6,"RingBufferStatus",202],[5,"Pipe",202],[5,"Stdin",256],[5,"Stdout",256],[5,"PanicInfo",1347],[5,"SimpleLogger",282],[5,"Metadata",1348],[5,"Record",1348],[5,"PhysAddr",321],[5,"VirtAddr",321],[5,"PhysPageNum",321],[5,"VirtPageNum",321],[5,"SimpleRange",321],[10,"StepByOne",321],[10,"Copy",1349],[10,"PartialEq",1342],[10,"PartialOrd",1342],[10,"Debug",1336],[10,"Clone",1350],[5,"PageTableEntry",631],[1,"array"],[5,"SimpleRangeIterator",321],[10,"FrameAllocator",444],[5,"StackFrameAllocator",444],[5,"FRAME_ALLOCATOR",444],[5,"Layout",1351],[5,"MemorySet",498],[5,"MapPermission",498],[6,"MapType",498],[5,"MapArea",498],[5,"PageTable",631],[5,"KERNEL_SPACE",498],[5,"PTEFlags",631],[5,"UserBufferIterator",631],[5,"String",1352],[5,"Condvar",772],[10,"Mutex",793],[5,"MutexSpin",793],[5,"MutexBlocking",793],[5,"Semaphore",830],[5,"RefMut",1353],[1,"isize"],[5,"SignalFlags",1177],[5,"INITPROC",922],[5,"ProcessControlBlock",1103],[5,"TaskControlBlock",1235],[5,"TaskContext",970],[5,"RecycleAllocator",983],[5,"TaskUserRes",983],[5,"PID_ALLOCATOR",983],[5,"KSTACK_ALLOCATOR",983],[5,"PidHandle",983],[5,"KernelStack",983],[10,"Sized",1349],[5,"TaskManager",1063],[5,"TASK_MANAGER",1063],[5,"PID2PCB",1063],[5,"BTreeMap",1354],[5,"ProcessControlBlockInner",1103],[5,"Processor",1144],[5,"TrapContext",1319],[5,"PROCESSOR",1144],[6,"TaskStatus",1235],[5,"TaskControlBlockInner",1235],[5,"TimerCondVar",1279],[5,"TIMERS",1279],[5,"BinaryHeap",1355],[5,"VirtioHal",58],[5,"OSInodeInner",106],[8,"VPNRange",321],[8,"FrameAllocatorImpl",444],[5,"CondvarInner",772],[5,"MutexBlockingInner",793],[5,"SemaphoreInner",830]],"r":[[22,18],[25,18],[26,18],[42,45],[43,45],[46,58],[93,106],[94,256],[95,256],[97,106],[98,202],[99,106],[294,444],[295,498],[296,498],[297,498],[298,498],[299,631],[300,631],[301,321],[302,321],[303,321],[304,631],[305,321],[306,321],[308,444],[310,444],[313,498],[316,498],[317,631],[318,631],[319,631],[320,631],[762,772],[763,793],[764,793],[765,793],[766,830],[767,852],[922,983],[924,983],[925,983],[926,1177],[927,970],[928,1235],[929,1235],[932,1063],[939,1144],[940,1144],[941,1144],[942,1144],[943,1144],[944,1144],[950,983],[952,1063],[953,983],[956,1063],[958,1063],[959,1144],[960,1144],[964,1144],[969,1063],[1310,1319]],"b":[[143,"impl-Debug-for-OpenFlags"],[144,"impl-LowerHex-for-OpenFlags"],[145,"impl-Binary-for-OpenFlags"],[146,"impl-UpperHex-for-OpenFlags"],[147,"impl-Octal-for-OpenFlags"],[377,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[378,"impl-From%3Cusize%3E-for-PhysAddr"],[379,"impl-From%3Cusize%3E-for-VirtAddr"],[381,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[383,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[384,"impl-From%3Cusize%3E-for-PhysPageNum"],[386,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[387,"impl-From%3Cusize%3E-for-VirtPageNum"],[552,"impl-LowerHex-for-MapPermission"],[553,"impl-Binary-for-MapPermission"],[554,"impl-Octal-for-MapPermission"],[555,"impl-Debug-for-MapPermission"],[556,"impl-UpperHex-for-MapPermission"],[684,"impl-Octal-for-PTEFlags"],[685,"impl-LowerHex-for-PTEFlags"],[686,"impl-Debug-for-PTEFlags"],[687,"impl-Binary-for-PTEFlags"],[688,"impl-UpperHex-for-PTEFlags"],[1204,"impl-Binary-for-SignalFlags"],[1205,"impl-LowerHex-for-SignalFlags"],[1206,"impl-Debug-for-SignalFlags"],[1207,"impl-UpperHex-for-SignalFlags"],[1208,"impl-Octal-for-SignalFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAEYAAAACMAJgAOADcAEQBPACUAewAAAH4ACgCLAAAAjgAGAJwAAwCpAAEArAAEALIAAQC5AAAAuwALAMgAFwDjAAAA6AAeAAsBFAAhAQAAIwEgAEUBMgB6AQIAfgEAAIABAQCDAQEAhgEHAJQBQgDaAQEA3wEgAAECAAAHAgAACgIOABwCAQAfAgIAIwIKADMCAAA4AgIARgIDAEsCAgBQAgQAVgICAFoCAgBgAgEAYwIQAHUCDwCLAgEAjwIQAKICAQCmAgwAuwIAAL0CAADGAgEAygIGANICAgDWAgAA2wIBAN4CBQDlAg4A9QIBAPsCDwANAwAAEAMTACcDAAArAxsASQMAAEwDCABWAwEAXQMuAI0DDACbAxcAtQMAALcDFgDPAwAA0QMnAP8DAAAHBDEAPAQAAEAEGgBcBAEAYQQEAGgEIACLBAEAjwQQAKYEAACpBAUAswQGAL4EAQDHBAAAzQQAAM8EAgDTBBAA5wQEAO8EHwARBQEAFQUXAC8FCQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
