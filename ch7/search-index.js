var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCCQQHCCCCCCISSSESSEESSSSSFNNNNHNNNNEECFEOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEECEEECMMCMMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNONNNNNNONNNHNNNNNONOONNNNNNNNNNNONNONFFNNNNNNNNNNNNNNNNNNNNNNHFNNNNNHNNNNNEEEEEEEEEEEEECECECHECCEEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNHHHHECFNNNNONNNNNSSSSSSSSSSSSSSSSSCCHHHHHHHHHHHHHHHHHHHSFEEEEEEEOCHENNHHHHCHEEENHNHNCCEECEECHCECNNNFFNNNNNNNNNNNNNONNOONNNNNNNNFNNNNNOOONNNNFFFOONHNNNNNNNNNHNNNNNNNHOHNNNNNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNSTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPFFGPNONNNNNNONNNNOONNNNONNNNOONNNNNOOONOOOOOOONOONNNNNNNNNSSHHHECHHHHHHHFNNNNNNNNOOONONONNNO","n":["board","clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","File","OpenFlags","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone_into","eq","from","from","from","head","into","into","into","make_pipe","new","read","read_byte","read_end_with_buffer","readable","readable","set_write_end","status","tail","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","writable","writable","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_DUP","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_KILL","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SIGACTION","SYSCALL_SIGPROCMASK","SYSCALL_SIGRETURN","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","check_sigaction_error","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_sigaction","sys_sigprocmask","sys_sigreturn","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","MAX_SIG","PidHandle","SignalAction","SignalActions","SignalFlags","TaskContext","__private_field","action","add_initproc","add_task","borrow","borrow_mut","call_kernel_signal_handler","call_user_signal_handler","check_pending_signals","check_signals_error_of_current","context","current_add_signal","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","handle_signals","into","manager","pid","pid2task","pid_alloc","processor","run_tasks","schedule","signal","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","SignalAction","SignalActions","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","fmt","from","from","handler","into","into","mask","table","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","PID2TCB","TASK_MANAGER","TaskManager","__private_field","__private_field","add","add_task","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","fetch","fetch_task","from","from","from","into","into","into","new","pid2task","ready_queue","remove_from_pid2task","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","drop","drop","from","from","from","from","get_top","into","into","into","into","kernel_stack_position","new","new","pid","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","MAX_SIG","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGDEF","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","check_error","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","frozen","get_status","get_trap_cx","get_user_token","getpid","handling_sig","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","killed","memory_set","new","parent","pid","signal_actions","signal_mask","signals","task_cx","task_status","to_owned","trap_ctx_backup","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","clone","clone_into","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","to_owned","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[18,"os::board"],[22,"os::config"],[32,"os::console"],[42,"os::drivers"],[45,"os::drivers::block"],[58,"os::drivers::block::virtio_blk"],[92,"os::fs"],[106,"os::fs::inode"],[202,"os::fs::pipe"],[256,"os::fs::stdio"],[280,"os::lang_items"],[281,"os::logging"],[293,"os::mm"],[320,"os::mm::address"],[443,"os::mm::frame_allocator"],[492,"os::mm::heap_allocator"],[497,"os::mm::memory_set"],[630,"os::mm::page_table"],[757,"os::sbi"],[761,"os::sync"],[763,"os::sync::up"],[774,"os::syscall"],[794,"os::syscall::fs"],[800,"os::syscall::process"],[812,"os::task"],[856,"os::task::action"],[884,"os::task::context"],[897,"os::task::manager"],[933,"os::task::pid"],[980,"os::task::processor"],[1010,"os::task::signal"],[1095,"os::task::switch"],[1096,"os::task::task"],[1156,"os::timer"],[1161,"os::trap"],[1170,"os::trap::context"],[1190,"core::fmt"],[1191,"core::result"],[1192,"core::any"],[1193,"easy_fs::block_dev"],[1194,"alloc::sync"],[1195,"alloc::vec"],[1196,"core::cmp"],[1197,"easy_fs::vfs"],[1198,"core::iter::traits::collect"],[1199,"core::option"],[1200,"core::hash"],[1201,"core::panic::panic_info"],[1202,"log"],[1203,"core::marker"],[1204,"core::clone"],[1205,"core::alloc::layout"],[1206,"alloc::string"],[1207,"core::cell"],[1208,"alloc::collections::btree::map"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,94,12,18,94,12,12,94,94,18,94,12,18,94,12,18,94,18,18,94,12,18,94,12,18,94,12,94,18,0,0,0,0,0,0,0,0,0,21,21,0,21,21,24,0,0,0,24,24,0,24,24,27,24,24,24,24,24,24,24,24,24,34,95,27,24,34,95,27,24,24,24,24,24,24,27,24,24,24,24,24,24,24,24,24,34,95,27,24,24,24,24,24,24,34,95,24,24,24,34,95,27,24,24,24,0,34,24,95,0,24,34,34,24,34,34,24,24,24,24,24,24,24,34,95,27,24,34,95,27,24,34,95,27,24,24,34,34,34,37,37,37,0,0,0,0,36,36,36,36,38,36,37,38,36,37,38,37,37,37,38,36,37,36,38,36,37,0,36,38,36,38,38,38,36,36,36,37,38,36,37,38,36,37,38,36,37,38,38,38,36,36,38,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,0,0,42,42,42,42,42,0,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,58,45,46,47,48,49,58,45,46,47,48,49,45,46,45,46,47,48,49,45,46,47,48,49,45,46,47,48,58,58,45,46,47,48,45,46,45,46,47,48,58,45,45,45,46,46,46,47,47,47,48,48,48,49,47,49,45,47,47,45,49,48,58,45,46,47,48,49,58,49,96,49,58,49,58,45,46,45,46,47,48,96,49,50,47,48,45,46,47,48,49,58,45,46,47,48,49,58,45,46,47,48,49,58,45,46,47,48,49,0,0,0,0,0,61,59,60,13,60,61,13,60,61,60,97,59,60,61,13,60,97,13,0,0,0,13,60,61,60,0,13,60,61,59,13,60,13,60,97,13,60,61,13,60,61,13,60,61,0,0,0,0,0,65,65,0,0,0,0,0,64,64,64,64,68,63,64,63,64,64,64,64,64,64,64,64,63,66,68,65,64,63,66,68,65,64,65,64,65,64,64,64,64,66,66,68,64,0,0,0,64,65,64,0,0,64,65,64,64,64,64,64,63,66,68,65,64,66,64,64,64,63,63,64,64,64,63,64,64,63,66,68,65,64,64,64,0,66,66,66,63,66,66,63,63,64,63,64,63,63,0,64,63,0,0,64,0,0,0,64,64,64,65,64,64,63,63,63,66,68,65,64,63,66,68,65,64,63,66,68,65,64,64,66,66,66,69,69,69,0,0,0,69,69,0,0,69,69,69,69,69,69,69,69,69,69,56,69,69,67,22,70,69,56,67,22,70,69,56,22,70,69,56,69,56,69,69,69,70,70,69,69,56,69,56,69,67,67,56,69,69,69,69,69,67,67,22,70,69,56,69,69,69,69,67,69,69,69,69,67,22,70,69,56,22,70,69,69,56,22,67,67,22,56,70,69,69,56,56,69,67,69,69,69,69,69,56,69,67,67,67,0,0,0,0,67,22,70,69,56,67,22,70,69,56,67,22,70,69,56,69,67,56,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,76,76,0,0,0,0,0,0,0,0,0,76,0,76,0,76,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,0,0,75,78,75,78,75,78,75,78,75,78,75,75,78,75,75,78,75,78,75,78,75,78,75,78,75,78,0,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,81,82,80,0,80,81,82,80,81,82,81,82,80,0,80,81,82,80,81,82,80,0,80,0,80,81,82,80,81,82,80,81,82,0,0,0,0,86,84,84,85,87,86,84,85,87,86,84,84,86,85,87,84,85,87,86,87,84,85,87,86,0,84,87,87,0,87,84,84,85,87,86,84,85,87,86,84,85,87,86,0,0,91,89,91,89,91,89,89,0,0,0,91,89,91,89,89,89,91,89,0,0,89,0,89,91,89,91,89,91,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,93,93,0,0,0,93,92,92,77,92,93,77,92,93,92,93,93,93,77,92,92,77,77,92,93,92,92,92,92,77,92,77,77,77,92,93,92,77,92,92,77,92,77,92,92,92,92,92,93,92,92,77,92,93,77,92,93,77,92,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90],"f":"`{{}b}`````````{{}d}`````````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}``````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730`````````{{BjBl}B`}{BjBn}`01``````````{{}C`}{{C`C`}C`}{{C`C`}b}10{C`Cb}`21{ce{}{}}0000000{C`C`}{{ce}b{}{}}{{C`C`}Cd}2{{C`C`}Bn}{Cf{{Af{Ch}}}}891{{C`c}b{{Cl{}{{Cj{C`}}}}}}{{C`Cn}A`}0000{cc{}}000{Cb{{D`{C`}}}}{CbC`}0{cC`{{Cl{}{{Cj{C`}}}}}}{{C`c}bDb}``>?8<<<<{C`Bn}0{{}b}{{BnBn{Af{Ch}}}Dd}>`{{nC`}{{D`{{Af{Dd}}}}}}{{C`C`}{{D`{Cd}}}}{{DdBl}B`}{Dd{{Al{Bf}}}}{C`{{Df{BnBn}}}}{DdBn}`{{C`C`}b}{{C`C`Bn}b}{{C`C`}C`}20{ce{}{}}3{c{{h{e}}}{}{}}0000000{cj{}}00036`9```````{DhBn}`{DhB`}0444444`{DjDj}{{ce}b{}{}}{{DjDj}Bn}{cc{}}00`888{{}{{Df{{Af{Dl}}{Af{Dl}}}}}}{{}Dh}{{DlBl}B`}{DhBf}{{{Af{{An{Dh}}}}}Dl}{DlBn}`{{Dh{Af{Dl}}}b}``?>>>>>>===1`4{{DhBf}b}`3``{ce{}{}}0009900{{DnBl}B`}{{E`Bl}B`}{DnBn}{E`Bn}{c{{h{e}}}{}{}}000{cj{}}03254{Ebd}`77{{EdEf}Bn}{Edb}{cc{}}{{}b};{{EdEh}b}776``````````````````1````````````````````{EjBn}{ElBn}>>>>>>>>>>>>{EjEn}{ElF`}{EjEj}{ElEl}{EnEn}{F`F`}{{{Fb{c}}}{{Fb{c}}}{FdFfFhFjFlFn}}{{ce}b{}{}}0000{{EjEj}Cd}{{ElEl}Cd}{{EnEn}Cd}{{F`F`}Cd}``{{EjEj}Bn}{{ElEl}Bn}{{EnEn}Bn}{{F`F`}Bn}?>{{EjCn}A`}{{ElCn}A`}{{EnCn}A`}{{F`Cn}A`}{cc{}}{EnEj}1{B`Ej}{B`El}{F`El}4{B`En}5{EjEn}{ElF`}{B`F`}88{En{{Bh{Bf}}}}{{{Fb{c}}}c{FdFfFhFjFl}}{Ejc{}}{Enc{}}{En{{Bh{G`}}}}23{F`{{Gb{B`}}}}{ce{}{}}000000{{{Fb{c}}}e{FdFfFhFjFl}{}}``{{cc}{{Gd{c}}}{FdFfFhFjFl}}{{cc}{{Fb{c}}}{FdFfFhFjFl}}{{{Gd{c}}}{{D`{e}}}{FdFfFhFjFl}{}}{EjB`}{ElB`}{{EjEj}{{D`{Cd}}}}{{ElEl}{{D`{Cd}}}}{{EnEn}{{D`{Cd}}}}{{F`F`}{{D`{Cd}}}}``{Fdb}{Enb}{F`b}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Gf{{D`{En}}}}{Gh{{D`{En}}}}{ce{}{}}00000``{{GfEn}b}{{GhEn}b}{Gj{{An{Gh}}}}{Ajb}``{{AjCn}A`}{{}{{D`{Aj}}}}{{}b}={cc{}}00{{GhEnEn}b}2999{{}Gf}{EnAj}{{}Gh}```{c{{h{e}}}{}{}}00000{cj{}}00``{Gld}88````````````{Gnb}{{}H`}`{{H`H`}H`}{{H`H`}b}10{H`Bf}`21{ce{}{}}000000000{HbHb}{H`H`}{{ce}b{}{}}0{{H`H`}Cd}2{{H`H`}Bn}{{HdHf{Bh{Bf}}}b}`{Hh{{Af{{An{Gn}}}}}}:```;{{HbHb}Bn}3``{{H`c}b{{Cl{}{{Cj{H`}}}}}}{{HbCn}A`}{{H`Cn}A`}0000{cc{}}0000{HdHd}{Bf{{D`{H`}}}}{BfH`}0{{{Bh{Bf}}}{{Df{GnB`B`}}}}{GnGn}{cH`{{Cl{}{{Cj{H`}}}}}}{{H`c}bDb}{{H`H`}b}{{GnElElH`}b}{{H`H`}H`}{{H`H`}Bn}{ce{}{}}0000{H`Bn}0{{}B`}{{HdHf}b}{{HdHfF`}b}`{Gnb}`{{ElElHbH`}Hd}{{}Gn}0{H`H`}`{{H`H`}{{D`{Cd}}}}{{GnHd{D`{{Bh{Bf}}}}}b}5{{}b}?{{GnF`}b}``{{H`H`Bn}b}```?{{H`H`}b}{{H`H`}H`}??1{GnB`}{{GnF`}{{D`{G`}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{HdHf}b}{{HdHfF`}b}``````````````{{}Hj}{{HjHj}Hj}{{HjHj}b}10{HjBf}``21{ce{}{}}000000000``{HjHj}{G`G`}{{ce}b{}{}}0{{HjHj}Cd}3{{HjHj}Bn}``89{{}G`}1{G`Bn}{{Hjc}b{{Cl{}{{Cj{Hj}}}}}}{{HfF`}{{D`{G`}}}}0{G`Hj}{{HjCn}A`}0000`{cc{}}0000{Bf{{D`{Hj}}}}{BfHj}0{cHj{{Cl{}{{Cj{Hj}}}}}}{B`Hf}{{Hjc}bDb}{{HjHj}b}{{HjHj}Hj}>{ce{}{}}0000{Blc{}}1{HjBn}0?{BlB`}{{HfF`EnHj}b}{{}Hf}{{{Al{{Bh{Bf}}}}}Bl}{{EnHj}G`}{Hl{{D`{c}}}{}}{HjHj}{{HjHj}{{D`{Cd}}}}{G`En}{G`Bn}>`{{HjHjBn}b}>?>==?{HfB`}{{HfF`}{{D`{G`}}}}{{HfEl}{{D`{Ej}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Hn}{c{{h{e}}}{}{}}000000000{cj{}}0000{{HjHj}Hj}{{HfF`}b};{{}B`}{B`b}0{Bnd}```{ce{}{}}0{{{An{c}}}{{I`{c}}}{}}{cc{}}`2{c{{An{c}}}{}}::9```````````````````{{B`{Gb{B`}}}Ib}{B`Ib}0{{BfCb}Ib}1{{B`BfB`}Ib}0{{IdB`B`}Bn}{{BfB`}Ib}{Bbd}{{}Ib}00{{B`Bb}Ib}{{BbIfIf}Ib}{CbIb}3{{IbBb}Ib}4```````````{{}b}`{ce{}{}}0{Idb}{{B`Id}b}3{{}{{D`{{Df{Bbn}}}}}}`2```{Ih{{Af{Ij}}}}{Bbb}{cc{}}76````````7```{c{{h{e}}}{}{}}0{cj{}}``8888{IfIf}{IlIl}{{ce}b{}{}}0{{}If}{{}Il}{{IfCn}A`}88`>>``>>777766`>>8{B`In}?```887{{}In}`````{{J`{Af{Ij}}}b}{{{Af{Ij}}}b}{ce{}{}}00000{Jb{{An{J`}}}}{Jd{{An{{Jf{B`{Af{Ij}}}}}}}}{J`{{D`{{Af{Ij}}}}}}{{}{{D`{{Af{Ij}}}}}}{cc{}}00555{{}J`}{B`{{D`{{Af{Ij}}}}}}`{B`b}{c{{h{e}}}{}{}}00000{cj{}}00`````{JhJj};;;;;;;;`{{JhB`}b}{Jl{{An{Jh}}}}{Jjb}{Jnb}::::{JnB`}{ce{}{}}000{B`{{Df{B`B`}}}}{{}Jh}{JjJn}`{{}Jj}{{Jnc}{}K`}`========<<<<```5555{Kb{{D`{{Af{Ij}}}}}}`{{}{{D`{{Af{Ij}}}}}}{{}Kd}{{}B`}{Kf{{An{Kb}}}}{cc{}}0{KbIn}`<<{{}Kb}{{}b}{Inb}98{c{{h{e}}}{}{}}000{cj{}}0``````````````````````````````````{{}Id}{{IdId}Id}{{IdId}b}10{IdCb}`21{ce{}{}}0{Id{{D`{{Df{Bbn}}}}}}{IdId}{{ce}b{}{}}{{IdId}Cd}2{{IdId}Bn}890{{Idc}b{{Cl{}{{Cj{Id}}}}}}{{IdCn}A`}0000{cc{}}{Cb{{D`{Id}}}}{CbId}0{cId{{Cl{}{{Cj{Id}}}}}}{{Idc}bDb}>?7<{IdBn}0;{{IdId}{{D`{Cd}}}}{{IdId}b}{{IdIdBn}b}{{IdId}Id}20{ce{}{}}3{c{{h{e}}}{}{}}0{cj{}}3```````{KhB`}`333333`{KjKj}{{ce}b{}{}}{{KjKj}Bn}{{Ij{Bh{Bf}}{Al{Hn}}}b}``{{{Af{Ij}}}{{Af{Ij}}}}{cc{}}00`{KhKj}{KhKd}8{IjB`}``{Ij{{I`{Kh}}}}==={KhBn}```{{{Bh{Bf}}}Ij}```````?``>>>>>>===``{{}B`}0{{}b}``0000{{}d}00`{{B`B`B`B`B`}Kd}{ce{}{}}0{KdKd}{{ce}b{}{}}{{KdCn}A`}>3```{{KdB`}b}`4`{c{{h{e}}}{}{}}0{cj{}}`","D":"ANb","p":[[1,"unit"],[1,"never"],[5,"Arguments",1190],[6,"Result",1191],[5,"TypeId",1192],[5,"Stdout",32],[1,"str"],[8,"Result",1190],[5,"BLOCK_DEVICE",45],[10,"BlockDevice",1193],[5,"Arc",1194],[5,"QUEUE_FRAMES",58],[5,"FrameTracker",443],[5,"Vec",1195],[5,"UPSafeCell",763],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",58],[1,"u8"],[1,"slice"],[10,"File",92],[5,"UserBuffer",630],[1,"bool"],[5,"OpenFlags",106],[1,"u32"],[6,"Ordering",1196],[5,"ROOT_INODE",106],[5,"Inode",1197],[17,"Item"],[10,"IntoIterator",1198],[5,"Formatter",1190],[6,"Option",1199],[10,"Hasher",1200],[5,"OSInode",106],[1,"tuple"],[5,"PipeRingBuffer",202],[6,"RingBufferStatus",202],[5,"Pipe",202],[5,"Stdin",256],[5,"Stdout",256],[5,"PanicInfo",1201],[5,"SimpleLogger",281],[5,"Metadata",1202],[5,"Record",1202],[5,"PhysAddr",320],[5,"VirtAddr",320],[5,"PhysPageNum",320],[5,"VirtPageNum",320],[5,"SimpleRange",320],[10,"StepByOne",320],[10,"Copy",1203],[10,"PartialEq",1196],[10,"PartialOrd",1196],[10,"Debug",1190],[10,"Clone",1204],[5,"PageTableEntry",630],[1,"array"],[5,"SimpleRangeIterator",320],[10,"FrameAllocator",443],[5,"StackFrameAllocator",443],[5,"FRAME_ALLOCATOR",443],[5,"Layout",1205],[5,"MemorySet",497],[5,"MapPermission",497],[6,"MapType",497],[5,"MapArea",497],[5,"PageTable",630],[5,"KERNEL_SPACE",497],[5,"PTEFlags",630],[5,"UserBufferIterator",630],[5,"String",1206],[5,"RefMut",1207],[1,"isize"],[5,"SignalFlags",1010],[5,"SignalAction",856],[5,"INITPROC",812],[5,"TaskControlBlock",1096],[5,"SignalActions",856],[5,"TaskContext",884],[5,"TaskManager",897],[5,"TASK_MANAGER",897],[5,"PID2TCB",897],[5,"BTreeMap",1208],[5,"PidAllocator",933],[5,"PidHandle",933],[5,"PID_ALLOCATOR",933],[5,"KernelStack",933],[10,"Sized",1203],[5,"Processor",980],[5,"TrapContext",1170],[5,"PROCESSOR",980],[5,"TaskControlBlockInner",1096],[6,"TaskStatus",1096],[5,"VirtioHal",58],[5,"OSInodeInner",106],[8,"VPNRange",320],[8,"FrameAllocatorImpl",443]],"r":[[22,18],[25,18],[26,18],[42,45],[43,45],[46,58],[93,106],[94,256],[95,256],[97,106],[98,202],[99,106],[293,443],[294,497],[295,497],[296,497],[297,497],[298,630],[299,630],[300,320],[301,320],[302,320],[303,630],[304,320],[305,320],[307,443],[309,443],[312,497],[315,497],[316,630],[317,630],[318,630],[319,630],[761,763],[814,933],[815,1010],[816,933],[817,856],[818,856],[819,1010],[820,884],[824,897],[833,980],[834,980],[835,980],[843,897],[844,933],[846,980],[847,980],[851,980],[1161,1170]],"b":[[143,"impl-Octal-for-OpenFlags"],[144,"impl-UpperHex-for-OpenFlags"],[145,"impl-LowerHex-for-OpenFlags"],[146,"impl-Debug-for-OpenFlags"],[147,"impl-Binary-for-OpenFlags"],[375,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[377,"impl-From%3Cusize%3E-for-PhysAddr"],[378,"impl-From%3Cusize%3E-for-VirtAddr"],[379,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[381,"impl-From%3Cusize%3E-for-PhysPageNum"],[383,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[384,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[385,"impl-From%3Cusize%3E-for-VirtPageNum"],[551,"impl-Octal-for-MapPermission"],[552,"impl-UpperHex-for-MapPermission"],[553,"impl-LowerHex-for-MapPermission"],[554,"impl-Binary-for-MapPermission"],[555,"impl-Debug-for-MapPermission"],[683,"impl-Octal-for-PTEFlags"],[684,"impl-UpperHex-for-PTEFlags"],[685,"impl-Debug-for-PTEFlags"],[686,"impl-LowerHex-for-PTEFlags"],[687,"impl-Binary-for-PTEFlags"],[1065,"impl-LowerHex-for-SignalFlags"],[1066,"impl-Octal-for-SignalFlags"],[1067,"impl-Debug-for-SignalFlags"],[1068,"impl-UpperHex-for-SignalFlags"],[1069,"impl-Binary-for-SignalFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALUDVwAAACMAJgAOADcAEQBPACUAewAAAH4ACgCLAAAAjgAGAJwAAwCpAAEArAAEALIAAQC5AAAAuwALAMgAFwDjAAAA6AAeAAsBEwAgAQAAIgEgAEQBMgB4AQAAegECAH4BAACAAQIAhQEHAJMBQgDZAQEA3gEgAAACAAAGAgAACQIOABsCAQAeAgIAIgIKADICAAA3AgIARQIDAEoCAgBPAgQAVQICAFkCAgBfAgEAYgIQAHQCDwCKAgEAjgIQAKECAQClAgwAugIAALwCAADFAgEAyQIGANECAgDVAgAA2gIBAN0CBQDkAg4A9AIBAPoCAQD9AgEABAMmACwDAAAuAxcASAMAAEoDDgBaAwsAaAMAAGsDDAB5AwAAewMXAJkDHwC9AwAAwwMeAOQDAQDoAywAGwQAAB4EBQAoBAYAMwQBADwEAABCBAAARAQCAEgEFgBiBAcAbQQsAJwECgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
