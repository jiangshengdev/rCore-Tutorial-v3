var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCQQHCCCCCCSSSESSEESSSSSFNNNNHNNNNHFONNNNHHHNHNNNFNNNNNHNNNNNFEEFFFFFFFFOCOOOHCCHCCOOHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHNNNNNNNNNNNNHHHHFOCFNNNNONNNNNSSSSSSSSSCCHSSHHHHHHHHHSFFFFFFFOHHNNCOOHHHNHHNONCCOHCOOOHOHOHCHCNNNFNNNNNOOONNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPONNNNNNONNNNONNNNNNNNONNNNNOONOOOONONNNNNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","lang_items","loader","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","APP_NAMES","__private_field","borrow","borrow_mut","deref","from","get_app_data","get_app_data_by_name","get_num_app","into","list_apps","try_from","try_into","type_id","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","page_table","ppn","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_READ","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDIN","FD_STDOUT","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","PidAllocator","PidHandle","Processor","TaskContext","TaskManager","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","idle_task_cx","into","manager","pid","pid","pid_alloc","processor","ra","ready_queue","recycled","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","drop","drop","from","from","from","from","get_top","into","into","into","into","kernel_stack_position","new","new","pid","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","eq","exec","exit_code","fork","from","from","from","get_status","get_trap_cx","get_user_token","getpid","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::board"],[20,"os::config"],[30,"os::console"],[40,"os::lang_items"],[41,"os::loader"],[55,"os::logging"],[67,"os::mm"],[95,"os::mm::address"],[216,"os::mm::frame_allocator"],[265,"os::mm::heap_allocator"],[270,"os::mm::memory_set"],[402,"os::mm::page_table"],[503,"os::sbi"],[507,"os::sync"],[510,"os::sync::up"],[521,"os::syscall"],[533,"os::syscall::fs"],[537,"os::syscall::process"],[544,"os::task"],[588,"os::task::context"],[601,"os::task::manager"],[625,"os::task::pid"],[672,"os::task::processor"],[702,"os::task::switch"],[703,"os::task::task"],[754,"os::timer"],[759,"os::trap"],[774,"os::trap::context"],[790,"core::fmt"],[791,"core::result"],[792,"core::any"],[793,"core::panic::panic_info"],[794,"alloc::vec"],[795,"core::option"],[796,"log"],[797,"alloc::string"],[798,"core::marker"],[799,"core::cmp"],[800,"core::clone"],[801,"core::alloc::layout"],[802,"alloc::sync"],[803,"core::iter::traits::collect"],[804,"core::hash"],[805,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,10,10,10,10,10,0,0,0,10,0,10,10,10,0,16,16,16,16,16,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,48,0,43,44,35,0,0,0,0,0,0,43,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,37,22,23,24,25,26,37,22,23,24,25,26,22,23,22,23,24,25,26,22,23,24,25,26,22,23,24,25,37,37,22,23,24,25,22,23,22,23,24,25,37,22,22,22,23,23,23,24,24,24,25,25,25,26,24,26,22,24,24,26,25,37,22,23,24,25,26,37,26,73,26,37,26,37,22,23,22,23,24,25,73,26,27,25,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,0,0,0,0,0,40,38,39,20,39,40,20,39,40,39,74,38,39,40,20,39,74,20,0,0,0,20,39,40,39,0,20,39,40,38,20,39,20,39,74,20,39,40,20,39,40,20,39,40,0,0,0,0,0,45,45,0,0,0,0,0,44,44,44,44,48,43,44,43,44,44,44,44,44,44,44,44,43,46,48,45,44,43,46,48,45,44,45,44,45,44,44,44,44,46,46,48,44,0,0,0,44,45,44,0,0,44,45,44,44,44,44,44,43,46,48,45,44,46,44,44,44,43,43,44,44,44,43,44,44,43,46,48,45,44,44,44,46,46,46,43,46,46,43,43,44,43,44,43,43,0,44,43,0,0,44,0,0,0,44,44,44,45,44,44,43,43,43,46,48,45,44,43,46,48,45,44,43,46,48,45,44,44,46,46,46,54,54,54,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,35,54,54,47,54,35,47,54,35,54,35,54,35,54,54,54,54,54,35,54,35,54,47,47,35,54,54,54,54,54,47,47,54,35,54,54,54,54,47,54,54,54,54,47,54,35,54,54,35,47,47,35,54,54,35,35,54,47,54,54,54,54,54,35,54,47,47,47,0,0,0,47,54,35,47,54,35,47,54,35,54,47,35,0,0,0,0,0,41,0,0,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,60,60,0,65,69,0,0,0,60,0,0,60,69,60,0,0,67,0,0,62,63,65,0,62,0,62,0,0,0,0,60,60,60,0,62,62,62,62,62,62,62,62,62,62,62,62,0,0,64,63,0,63,64,63,64,64,63,0,63,64,63,64,63,63,63,64,63,64,63,64,0,0,0,0,66,65,65,61,67,66,65,61,67,66,65,65,66,61,67,65,61,67,66,67,65,61,67,66,0,65,67,67,0,67,65,65,61,67,66,65,61,67,66,65,61,67,66,0,0,70,69,70,69,70,69,69,0,0,0,70,69,70,69,69,69,70,69,0,0,69,0,69,70,69,70,69,70,0,71,71,0,0,0,71,72,58,72,71,58,72,71,72,71,71,71,58,72,58,58,72,71,72,72,72,58,58,58,58,72,71,72,58,72,58,72,58,72,72,71,72,58,72,71,58,72,71,58,72,71,0,0,0,0,0,0,0,0,0,59,59,59,0,0,59,0,0,59,0,59,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`{{}b}````````{{}d}````````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}{Abd}``66{Ad{{Af{n}}}}6{Ah{{Al{Aj}}}}{n{{An{{Al{Aj}}}}}}{{}Ah}:<776`::{{B`Bb}Bd}{B`b};><{{B`Bf}b}::9````````````````{{}{{An{Bh}}}}``{{}b}````0{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}````````````{BlBd}{BnBd}{ce{}{}}00000000000{BlC`}{BnCb}{BlBl}{BnBn}{C`C`}{CbCb}{{{Cd{c}}}{{Cd{c}}}{CfChCjClCnD`}}{{ce}b{}{}}0000{{BlBl}Db}{{BnBn}Db}{{C`C`}Db}{{CbCb}Db}``{{BlBl}Bd}{{BnBn}Bd}{{C`C`}Bd}{{CbCb}Bd}?>{{BlDd}A`}{{BnDd}A`}{{C`Dd}A`}{{CbDd}A`}{cc{}}{C`Bl}{AhBl}2{AhBn}{CbBn}4{AhC`}{BlC`}6{BnCb}{AhCb}88{C`{{Al{Aj}}}}{{{Cd{c}}}c{CfChCjClCn}}{Blc{}}{C`c{}}{C`{{Al{Df}}}}3{Cb{{Dh{Ah}}}}{ce{}{}}000000{{{Cd{c}}}e{CfChCjClCn}{}}``{{cc}{{Dj{c}}}{CfChCjClCn}}{{cc}{{Cd{c}}}{CfChCjClCn}}{{{Dj{c}}}{{An{e}}}{CfChCjClCn}{}}{BlAh}{BnAh}{{BlBl}{{An{Db}}}}{{BnBn}{{An{Db}}}}{{C`C`}{{An{Db}}}}{{CbCb}{{An{Db}}}}``{Cfb}{Cbb}<<<<<{c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Dl{{An{C`}}}}{Dn{{An{C`}}}}{ce{}{}}00000``{{DlC`}b}{{DnC`}b}{E`{{Eb{Dn}}}}{Bhb}``{{BhDd}A`}{{}{{An{Bh}}}}{{}b}{C`b}{cc{}}00{{DnC`C`}b}3:::{{}Dl}{C`Bh}{{}Dn}```{c{{h{e}}}{}{}}00000{cj{}}00``{Edd}99````````````{Efb}{{}Eh}`{{EhEh}Eh}{{EhEh}b}10{EhAj}`21{ce{}{}}000000000{EjEj}{EhEh}{{ce}b{}{}}0{{EhEh}Db}2{{EhEh}Bd}{{ElEn{Al{Aj}}}b}`{F`{{Fb{{Eb{Ef}}}}}}:```;{{EjEj}Bd}3``{{Ehc}b{{Ff{}{{Fd{Eh}}}}}}{{EjDd}A`}{{EhDd}A`}0000{cc{}}0000{ElEl}{Aj{{An{Eh}}}}{AjEh}0{{{Al{Aj}}}{{Fh{EfAhAh}}}}{EfEf}{cEh{{Ff{}{{Fd{Eh}}}}}}{{Ehc}bFj}{{EhEh}b}{{EfBnBnEh}b}{{EhEh}Eh}{{EhEh}Bd}{ce{}{}}0000{EhBd}0{{ElEn}b}{{ElEnCb}b}`{Efb}`{{BnBnEjEh}El}{{}Ef}0{EhEh}`{{EhEh}{{An{Db}}}}{{EfEl{An{{Al{Aj}}}}}b}5{{}b}>{{EfCb}b}``{{EhEhBd}b}```>{{EhEh}b}?==0{EfAh}{{EfCb}{{An{Df}}}}{c{{h{e}}}{}{}}000000000{cj{}}0000{{EhEh}Eh}{{ElEn}b}{{ElEnCb}b}````````````{{}Fl}{{FlFl}Fl}{{FlFl}b}10{FlAj}``21{ce{}{}}00000{FlFl}{DfDf}{{ce}b{}{}}0{{FlFl}Db}3{{FlFl}Bd}89{{}Df}1{DfBd}{{Flc}b{{Ff{}{{Fd{Fl}}}}}}{{EnCb}{{An{Df}}}}0{DfFl}{{FlDd}A`}0000`{cc{}}00{Aj{{An{Fl}}}}{AjFl}0{cFl{{Ff{}{{Fd{Fl}}}}}}{AhEn}{{Flc}bFj}{{FlFl}b}{{FlFl}Fl}>{ce{}{}}00{FlBd}0>{{EnCbC`Fl}b}{{}En}{{C`Fl}Df}{FlFl}{{FlFl}{{An{Db}}}}{DfC`}{DfBd}:`{{FlFlBd}b}:;:99;{EnAh}{{EnCb}{{An{Df}}}}{{EnBn}{{An{Bl}}}}{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}{c{{h{e}}}{}{}}00000{cj{}}00{{FlFl}Fl}{{EnCb}b};{{}Ah}{Ahb}0{Bdd}````{ce{}{}}0{{{Eb{c}}}{{Fn{c}}}{}}{cc{}}`2{c{{Eb{c}}}{}}::9```````````{{Ah{Dh{Ah}}}G`}``{{AhAjAh}G`}0{AjG`}{Gbd}{{}G`}00{{G`Gb}G`}1`````````{{}b}{{{Fb{Gd}}}b};;```{{}{{An{{Fb{Gd}}}}}}{{}Gf}{{}Ah}{Gh{{Fb{Gd}}}}{Gbb}4>`{ce{}{}}```{{}Gj}````8`{Glb}`9`7`{c{{h{e}}}{}{}}0{cj{}}`44{cc{}}{AhGl}6```332{{}Gl}```{{Gn{Fb{Gd}}}b}>8888{H`{{Eb{Gn}}}}{Gn{{An{{Fb{Gd}}}}}}?55::{{}Gn}`888877`````{HbGj}<<<<<<<<`{{HbAh}b}{Hd{{Eb{Hb}}}}{Gjb}{Hfb};;;;{HfAh}{ce{}{}}000{Ah{{Fh{AhAh}}}}{{}Hb}{GjHf}`{{}Gj}{{Hfc}{}Hh}`{c{{h{e}}}{}{}}0000000{cj{}}000```7777{Hj{{An{{Fb{Gd}}}}}}`{{}{{An{{Fb{Gd}}}}}}{{}Gf}{{}Ah}{Hl{{Eb{Hj}}}}{cc{}}0{HjGl}`>>{{}Hj}{{}b}{Glb}98;;;;::````````{ce{}{}}00000`{HnHn}{{ce}b{}{}}{{HnHn}Bd}{{Gd{Al{Aj}}}b}`{{{Fb{Gd}}}{{Fb{Gd}}}}:::{I`Hn}{I`Gf}{I`Ah}{GdAh}`{Gd{{Fn{I`}}}}:::{I`Bd}``{{{Al{Aj}}}Gd}````<`{c{{h{e}}}{}{}}00000{cj{}}00``{{}Ah}0{{}b}``00```00`{{}d}0`0``{{AhAhAhAhAh}Gf}{ce{}{}}0{cc{}}1```{{GfAh}b}``887`","D":"BJl","p":[[1,"unit"],[1,"never"],[5,"Arguments",790],[6,"Result",791],[5,"TypeId",792],[5,"Stdout",30],[1,"str"],[8,"Result",790],[5,"PanicInfo",793],[5,"APP_NAMES",41],[5,"Vec",794],[1,"usize"],[1,"u8"],[1,"slice"],[6,"Option",795],[5,"SimpleLogger",55],[5,"Metadata",796],[1,"bool"],[5,"Record",796],[5,"FrameTracker",216],[5,"String",797],[5,"PhysAddr",95],[5,"VirtAddr",95],[5,"PhysPageNum",95],[5,"VirtPageNum",95],[5,"SimpleRange",95],[10,"StepByOne",95],[10,"Copy",798],[10,"PartialEq",799],[10,"PartialOrd",799],[10,"Debug",790],[10,"Clone",800],[6,"Ordering",799],[5,"Formatter",790],[5,"PageTableEntry",402],[1,"array"],[5,"SimpleRangeIterator",95],[10,"FrameAllocator",216],[5,"StackFrameAllocator",216],[5,"FRAME_ALLOCATOR",216],[5,"UPSafeCell",510],[5,"Layout",801],[5,"MemorySet",270],[5,"MapPermission",270],[6,"MapType",270],[5,"MapArea",270],[5,"PageTable",402],[5,"KERNEL_SPACE",270],[5,"Arc",802],[17,"Item"],[10,"IntoIterator",803],[1,"tuple"],[10,"Hasher",804],[5,"PTEFlags",402],[5,"RefMut",805],[1,"isize"],[1,"i32"],[5,"TaskControlBlock",703],[5,"TrapContext",774],[5,"INITPROC",544],[5,"PidHandle",625],[5,"TaskContext",588],[5,"TaskManager",601],[5,"TASK_MANAGER",601],[5,"PidAllocator",625],[5,"PID_ALLOCATOR",625],[5,"KernelStack",625],[10,"Sized",798],[5,"Processor",672],[5,"PROCESSOR",672],[6,"TaskStatus",703],[5,"TaskControlBlockInner",703],[8,"VPNRange",95],[8,"FrameAllocatorImpl",216]],"r":[[20,17],[23,17],[24,17],[67,216],[68,270],[69,270],[70,270],[71,270],[72,270],[73,402],[74,95],[75,95],[76,95],[77,95],[83,216],[91,270],[92,402],[93,402],[94,402],[507,510],[546,625],[547,625],[548,625],[549,672],[550,588],[551,601],[554,601],[560,672],[561,672],[562,672],[565,601],[572,625],[577,672],[579,672],[583,672],[759,774]],"b":[[150,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[151,"impl-From%3Cusize%3E-for-PhysAddr"],[153,"impl-From%3Cusize%3E-for-VirtAddr"],[154,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[156,"impl-From%3Cusize%3E-for-PhysPageNum"],[157,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[159,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[160,"impl-From%3Cusize%3E-for-VirtPageNum"],[324,"impl-Octal-for-MapPermission"],[325,"impl-UpperHex-for-MapPermission"],[326,"impl-LowerHex-for-MapPermission"],[327,"impl-Debug-for-MapPermission"],[328,"impl-Binary-for-MapPermission"],[445,"impl-LowerHex-for-PTEFlags"],[446,"impl-Debug-for-PTEFlags"],[447,"impl-UpperHex-for-PTEFlags"],[448,"impl-Octal-for-PTEFlags"],[449,"impl-Binary-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMABYQAHAAAAEgAPACQABQArAAMANQAHAD4AAABAAAMARQABAE8AAABRAAEAWgABAGEAAABmAAEAaQAAAG4ACwB8ABMAkgADAJcAAQCaAAEAnQABAKAAAQCkAAEApwAAAKkAAACxAAYAugAeANoAAQDeABEA9gAAAPsAAAD9AAwADQEAAA8BAQAaAQAAHQEAACMBAAAmAQ4AOAEBADsBAgA/AQoATwEAAFUBAQBiAQIAZgEBAGsBAgByAQEAdQECAHsBAQCAAQ4AkAEHAJkBBACkAQAAqAEKALgBAAC6AQIAvgEFAMoBAADMAQAA1gEBANoBAADeAQAA4wEBAOYBAgDsAQgA9gEAAAACAQAHAgsAFAIAABYCCAAgAgAAKQIAACwCAQAvAgAANAIAADwCAABAAgEASgICAE4CAQBWAgIAWgIAAFwCAABfAgQAawIGAHMCAAB2AgAAeAIIAIICAgCRAgAAlAINAKMCBACtAgAAuQIaANcCBQDgAhQA/wIBAAkDAQATAwIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
