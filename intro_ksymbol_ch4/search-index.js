var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCQQHCCCCCCSSSESSEESSSSSHFNNNNHNNNNFHHNNHHNNNONONHNOHNNNHHHEEEEEEEEEECECCHCCEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNHNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNNHHHECFNNNNONNNNNSSSSSCCHSHHHHHFFFFONNNNNNNHCOHHNHNNNNNNONNNHNHNOOHNHNOOHCCONNNNNNNNNFNNNNNOOONNNNHPPPFGONNNNNNNNNNNNONNONOOONONNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","ksymbol","lang_items","loader","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","KernelFuncEntry","_end_ksymbol_elf","_start_ksymbol_elf","borrow","borrow_mut","demangled_func_name","etext","fmt","from","func_name","func_name","func_size","func_size","into","kernel_func_by_addr","start_addr","start_addr","stext","try_from","try_into","type_id","panic","get_app_data","get_num_app","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","remap_test","remove","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translated_byte_buffer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","console_putchar","set_timer","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_SBRK","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_sbrk","sys_yield","TASK_MANAGER","TaskContext","TaskManager","TaskManagerInner","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_current_program_brk","change_program_brk","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","find_next_task","from","from","from","get_current_token","get_current_trap_cx","inner","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","ra","run_first_task","run_first_task","run_next_task","run_next_task","s","sp","suspend_current_and_run_next","switch","task","tasks","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","base_size","borrow","borrow","borrow_mut","borrow_mut","change_program_brk","clone","clone_into","eq","from","from","get_trap_cx","get_user_token","heap_bottom","into","into","memory_set","new","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_into","try_into","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::board"],[20,"os::config"],[31,"os::console"],[41,"os::ksymbol"],[62,"os::lang_items"],[63,"os::loader"],[65,"os::mm"],[84,"os::mm::address"],[204,"os::mm::frame_allocator"],[253,"os::mm::heap_allocator"],[258,"os::mm::memory_set"],[390,"os::mm::page_table"],[488,"os::sbi"],[491,"os::sync"],[493,"os::sync::up"],[504,"os::syscall"],[512,"os::syscall::fs"],[514,"os::syscall::process"],[518,"os::task"],[572,"os::task::context"],[585,"os::task::switch"],[586,"os::task::task"],[620,"os::timer"],[625,"os::trap"],[640,"os::trap::context"],[656,"core::fmt"],[657,"core::result"],[658,"core::any"],[659,"alloc::string"],[660,"core::option"],[661,"core::panic::panic_info"],[662,"core::marker"],[663,"core::cmp"],[664,"core::clone"],[665,"core::alloc::layout"],[666,"alloc::sync"],[667,"core::iter::traits::collect"],[668,"core::hash"],[669,"alloc::vec"],[670,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,0,0,0,12,12,0,0,12,12,12,12,12,12,12,0,12,12,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,20,33,18,20,21,22,23,33,18,20,21,22,23,18,20,18,20,21,22,23,18,20,21,22,23,18,20,21,22,33,33,18,20,21,22,18,20,18,20,21,22,33,18,18,18,20,20,20,21,21,21,22,22,22,23,21,23,21,21,23,22,33,18,20,21,22,23,33,23,61,23,33,23,33,18,20,18,20,21,22,61,23,24,22,18,20,21,22,23,33,18,20,21,22,23,33,18,20,21,22,23,33,18,20,21,22,23,0,0,0,0,0,36,34,35,38,35,36,38,35,36,35,62,34,35,36,38,35,62,38,0,0,0,38,35,36,35,0,38,35,36,34,38,35,38,35,62,38,35,36,38,35,36,38,35,36,0,0,0,0,0,44,44,0,0,0,0,0,41,41,41,41,45,40,41,40,42,40,41,41,41,41,41,41,41,41,40,42,45,44,41,40,42,45,44,41,44,41,44,41,41,41,41,42,42,45,41,0,0,0,41,44,41,0,0,41,44,41,41,41,41,41,40,42,45,44,41,41,41,41,40,41,41,41,40,41,41,40,42,45,44,41,41,41,42,42,42,40,42,42,40,40,41,40,41,40,0,41,0,0,41,40,42,0,0,0,41,41,41,44,41,41,40,40,40,42,45,44,41,40,42,45,44,41,40,42,45,44,41,41,42,42,42,50,50,50,0,0,0,50,50,50,50,50,50,50,50,50,50,50,50,31,50,50,43,50,31,43,50,31,50,31,50,31,50,50,50,50,50,31,50,31,50,43,43,31,50,50,50,50,50,43,43,50,31,50,50,50,50,43,50,50,50,50,43,50,31,50,50,31,43,43,31,50,50,31,31,50,43,50,50,50,50,50,31,50,43,43,0,43,50,31,43,50,31,43,50,31,50,43,31,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,55,63,57,55,63,57,55,0,0,63,0,0,57,0,55,55,63,57,55,55,55,55,63,57,0,55,0,55,55,58,0,55,0,55,58,58,0,0,0,63,55,63,57,55,63,57,55,63,57,0,58,58,58,58,58,58,58,58,58,58,58,58,0,60,60,60,0,0,59,59,60,59,60,59,60,60,60,59,60,59,59,59,59,60,59,59,59,59,59,60,59,59,60,59,60,59,60,0,0,0,0,0,0,0,0,0,56,56,56,0,0,56,0,0,56,0,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":"`{{}b}````````{{}d}```````````````````{f{{h{ff}}}}`{ce{}{}}0{cc{}}1{jb}{c{{l{e}}}{}{}}0{cn{}}{{A`Ab}Ad}```55{AbAf}`{{AhAj}Ad}6{AhAb}`{Ahf}`9{f{{Al{Ah}}}}1``776{And}{f{{Bb{B`}}}}{{}f}``````````````{{}b}````````````````{BdBf}{BhBf}{ce{}{}}00000000000{BdBj}{BhBl}{BdBd}{BhBh}{BjBj}{BlBl}{{{Bn{c}}}{{Bn{c}}}{C`CbCdCfChCj}}{{ce}b{}{}}0000{{BdBd}Cl}{{BhBh}Cl}{{BjBj}Cl}{{BlBl}Cl}``{{BdBd}Bf}{{BhBh}Bf}{{BjBj}Bf}{{BlBl}Bf}?>{{BdAj}Ad}{{BhAj}Ad}{{BjAj}Ad}{{BlAj}Ad}{cc{}}{BjBd}1{fBd}{fBh}{BlBh}4{fBj}{BdBj}6{fBl}7{BhBl}8{Bj{{Bb{B`}}}}{{{Bn{c}}}c{C`CbCdCfCh}}{Bjc{}}{Bj{{Bb{Cn}}}}2{Bl{{D`{f}}}}{ce{}{}}000000{{{Bn{c}}}e{C`CbCdCfCh}{}}``{{cc}{{Db{c}}}{C`CbCdCfCh}}{{cc}{{Bn{c}}}{C`CbCdCfCh}}{{{Db{c}}}{{Al{e}}}{C`CbCdCfCh}{}}{Bdf}{Bhf}{{BdBd}{{Al{Cl}}}}{{BhBh}{{Al{Cl}}}}{{BjBj}{{Al{Cl}}}}{{BlBl}{{Al{Cl}}}}``{C`b}{Blb}<<<<<{c{{l{e}}}{}{}}00000000000{cn{}}00000``````{Dd{{Al{Bj}}}}{Df{{Al{Bj}}}}{ce{}{}}00000``{{DdBj}b}{{DfBj}b}{Dh{{Dj{Df}}}}{Dlb}``{{DlAj}Ad}{{}{{Al{Dl}}}}{{}b}{Bjb}{cc{}}00{{DfBjBj}b}3:::{{}Dd}{BjDl}{{}Df}```{c{{l{e}}}{}{}}00000{cn{}}00``{Dnd}99````````````{E`b}{{}Eb}{{E`BhBh}Bf}{{EdEfBl}b}`{{EbEb}Eb}{{EbEb}b}10{EbB`}`21{ce{}{}}000000000{EhEh}{EbEb}{{ce}b{}{}}0{{EbEb}Cl}2{{EbEb}Bf}{{EdEf{Bb{B`}}}b}`{Ej{{El{{Dj{E`}}}}}}:```={{EhEh}Bf}3``{{Ebc}b{{F`{}{{En{Eb}}}}}}{{EhAj}Ad}{{EbAj}Ad}0000{cc{}}0000{B`{{Al{Eb}}}}{B`Eb}0{{{Bb{B`}}}{{h{E`ff}}}}{cEb{{F`{}{{En{Eb}}}}}}{{Ebc}bFb}{{EbEb}b}{{E`BhBhEb}b}{{EbEb}Eb}?{ce{}{}}0000{EbBf}0{{EdEf}b}{{EdEfBl}b}`{E`b}`{{BhBhEhEb}Ed}{{}E`}0{EbEb}`{{EbEb}{{Al{Cl}}}}{{E`Ed{Al{{Bb{B`}}}}}b}{{}b}=``{{EbEbBf}b}{{E`BhBh}Bf}9```=?=<<?{E`f}{{E`Bl}{{Al{Cn}}}}{c{{l{e}}}{}{}}000000000{cn{}}0000{{EbEb}Eb}?>````````````{{}Fd}{{FdFd}Fd}{{FdFd}b}10{FdB`}``21{ce{}{}}00000{FdFd}{CnCn}{{ce}b{}{}}0{{FdFd}Cl}3{{FdFd}Bf}89{{}Cn}1{CnBf}{{Fdc}b{{F`{}{{En{Fd}}}}}}{{EfBl}{{Al{Cn}}}}0{CnFd}{{FdAj}Ad}0000`{cc{}}00{B`{{Al{Fd}}}}{B`Fd}0{cFd{{F`{}{{En{Fd}}}}}}{fEf}{{Fdc}bFb}{{FdFd}b}{{FdFd}Fd}>{ce{}{}}00{FdBf}0>{{EfBlBjFd}b}{{}Ef}{{BjFd}Cn}{FdFd}{{FdFd}{{Al{Cl}}}}{CnBj}{CnBf}:`{{FdFdBf}b}:;:99;{Eff}{{EfBl}{{Al{Cn}}}}{{fB`f}{{Ff{{Bb{B`}}}}}}{c{{l{e}}}{}{}}00000{cn{}}00?{{EfBl}b}7{fb}0{Bfd}```{ce{}{}}0{{{Dj{c}}}{{Fh{c}}}{}}{cc{}}`2{c{{Dj{c}}}{}}887```````{{f{D`{f}}}Fj}`{{fB`f}Fj}{Fld}{{}Fj}{FlFj}1`````888888{{FnFl}{{Al{f}}}}{Fl{{Al{f}}}}``{{}G`}{{}f}{GbFn}{{}b}{Fn{{Al{f}}}}==={Fnf}{FnG`}`{ce{}{}}004{Fnb}50``5{Fnd}61``6```{c{{l{e}}}{}{}}00000{cn{}}00`44{cc{}}{fGd}6```332{{}Gd}```````7777{{GfFl}{{Al{f}}}}{GhGh}{{ce}b{}{}}{{GhGh}Bf}66{GfG`}{Gff}`==`{{{Bb{B`}}f}Gf}```>`;;;;::``{{}f}0{{}b}``00```00`{{}d}0`0``{{fffff}G`}{ce{}{}}0>0```{{G`f}b}``{c{{l{e}}}{}{}}0{cn{}}`","D":"B@h","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"tuple"],[5,"Arguments",656],[6,"Result",657],[5,"TypeId",658],[5,"Stdout",31],[1,"str"],[8,"Result",656],[5,"String",659],[5,"KernelFuncEntry",41],[5,"Formatter",656],[6,"Option",660],[5,"PanicInfo",661],[1,"u8"],[1,"slice"],[5,"PhysAddr",84],[1,"bool"],[5,"VirtAddr",84],[5,"PhysPageNum",84],[5,"VirtPageNum",84],[5,"SimpleRange",84],[10,"StepByOne",84],[10,"Copy",662],[10,"PartialEq",663],[10,"PartialOrd",663],[10,"Debug",656],[10,"Clone",664],[6,"Ordering",663],[5,"PageTableEntry",390],[1,"array"],[5,"SimpleRangeIterator",84],[10,"FrameAllocator",204],[5,"StackFrameAllocator",204],[5,"FRAME_ALLOCATOR",204],[5,"UPSafeCell",493],[5,"FrameTracker",204],[5,"Layout",665],[5,"MemorySet",258],[5,"MapPermission",258],[5,"MapArea",258],[5,"PageTable",390],[6,"MapType",258],[5,"KERNEL_SPACE",258],[5,"Arc",666],[17,"Item"],[10,"IntoIterator",667],[10,"Hasher",668],[5,"PTEFlags",390],[5,"Vec",669],[5,"RefMut",670],[1,"isize"],[1,"i32"],[5,"TaskManager",518],[5,"TrapContext",640],[5,"TASK_MANAGER",518],[5,"TaskContext",572],[5,"TaskControlBlock",586],[6,"TaskStatus",586],[8,"VPNRange",84],[8,"FrameAllocatorImpl",204],[5,"TaskManagerInner",518]],"r":[[20,17],[23,17],[24,17],[65,204],[66,258],[67,258],[68,258],[69,258],[70,390],[71,84],[72,84],[73,84],[74,84],[76,204],[82,258],[83,390],[491,493],[519,572],[625,640]],"b":[[139,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[141,"impl-From%3Cusize%3E-for-PhysAddr"],[142,"impl-From%3Cusize%3E-for-VirtAddr"],[143,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[145,"impl-From%3Cusize%3E-for-PhysPageNum"],[146,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[148,"impl-From%3Cusize%3E-for-VirtPageNum"],[150,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[314,"impl-UpperHex-for-MapPermission"],[315,"impl-Octal-for-MapPermission"],[316,"impl-Binary-for-MapPermission"],[317,"impl-LowerHex-for-MapPermission"],[318,"impl-Debug-for-MapPermission"],[433,"impl-Debug-for-PTEFlags"],[434,"impl-LowerHex-for-PTEFlags"],[435,"impl-Octal-for-PTEFlags"],[436,"impl-UpperHex-for-PTEFlags"],[437,"impl-Binary-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIwBSgASAAwAIAACACYAAwArAAMAMAABADQAAAA2AAAAOgAEAEIACQBNAAAAUwABAFYAAABbAAEAXgAAAGEAKQCMAAAAjgACAJIAAQCVAAAAlwAAAJkABQClACcAzgABANIAEQDqAAAA7wAOAAEBAAADAQEACgEFABEBAgAZAQAAHAEOAC4BAQAxAQIANQEKAEkBAQBWAQIAWgECAF8BAwBkAQEAZwEEAG8BAQByARAAhAEFAI0BBACYAQEAnAEKAKsBDAC+AQAAwAEAAMkBAwDOAQIA0gEAANcBAQDaAQEA3QEIAOcBAQDsAQAA7wEBAPYBBwABAgAACwIGABgCAAA0AggAPgIBAEYCAgBLAgIAUAIEAFYCAgBbAgIAYAIPAHkCAQCDAgEAjQICAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
