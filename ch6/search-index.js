var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCCQQHCCCCCCISSSESSEESSSSSFNNNNHNNNNEECFEOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFFFOOCHHMMOCMOMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONFFNNNNNNNNNNNNNNNNNNNNNNHFNNNNNHNNNNNFEEFFFFFFFKFFFFOCOOOOOOOHCHOCHHCCOOHOMHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNHHHHFOCFNNNNONNNNNSSSSSSSSSSSCCHHHHHHHHHHHHSFFFFFFFOHHNNCOOHHHNHHNONCCOHCOOOHOHOHCHCNNNFNNNNNOOONNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPNONNNNNNONNNNOONNNNNNNNONNNNNOONOOOONONNNNNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNNOOONOONNNO","n":["board","clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","File","OSInode","OpenFlags","Stdin","Stdout","bits","inner","inode","list_apps","open_file","read","readable","readable","stdio","writable","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","UserBufferIterator","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","buffers","buffers","current_buffer","current_idx","frame_alloc","frame_allocator","frame_dealloc","frames","heap_allocator","init","kernel_token","memory_set","page_table","page_table","ppn","remap_test","root_ppn","step","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_OPEN","SYSCALL_READ","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_open","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","PidAllocator","PidHandle","Processor","TaskContext","TaskManager","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","idle_task_cx","into","manager","pid","pid","pid_alloc","processor","ra","ready_queue","recycled","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","drop","drop","from","from","from","from","get_top","into","into","into","into","kernel_stack_position","new","new","pid","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","get_status","get_trap_cx","get_user_token","getpid","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[18,"os::board"],[22,"os::config"],[32,"os::console"],[42,"os::drivers"],[45,"os::drivers::block"],[58,"os::drivers::block::virtio_blk"],[92,"os::fs"],[109,"os::fs::inode"],[205,"os::fs::stdio"],[229,"os::lang_items"],[230,"os::logging"],[242,"os::mm"],[284,"os::mm::address"],[407,"os::mm::frame_allocator"],[456,"os::mm::heap_allocator"],[461,"os::mm::memory_set"],[594,"os::mm::page_table"],[721,"os::sbi"],[725,"os::sync"],[728,"os::sync::up"],[739,"os::syscall"],[753,"os::syscall::fs"],[757,"os::syscall::process"],[764,"os::task"],[808,"os::task::context"],[821,"os::task::manager"],[845,"os::task::pid"],[892,"os::task::processor"],[922,"os::task::switch"],[923,"os::task::task"],[976,"os::timer"],[981,"os::trap"],[996,"os::trap::context"],[1013,"core::fmt"],[1014,"core::result"],[1015,"core::any"],[1016,"easy_fs::block_dev"],[1017,"alloc::sync"],[1018,"alloc::vec"],[1019,"core::option"],[1020,"core::cmp"],[1021,"easy_fs::vfs"],[1022,"core::iter::traits::collect"],[1023,"core::hash"],[1024,"core::panic::panic_info"],[1025,"log"],[1026,"alloc::string"],[1027,"core::marker"],[1028,"core::clone"],[1029,"core::alloc::layout"],[1030,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,86,12,18,86,12,12,86,86,18,86,12,18,86,12,18,86,18,18,86,12,18,86,12,18,86,12,86,18,0,0,0,0,0,21,22,0,0,0,24,24,22,0,24,22,24,21,0,0,0,21,21,0,21,21,29,21,21,21,21,21,21,21,21,21,22,87,29,21,22,87,29,21,21,21,21,21,21,29,21,21,21,21,21,21,21,21,21,22,87,29,21,21,21,21,21,21,22,87,21,21,21,22,87,29,21,21,21,0,22,21,87,0,21,22,22,21,22,22,21,21,21,21,21,21,21,22,87,29,21,22,87,29,21,22,87,29,21,21,22,22,22,0,0,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,0,0,39,39,39,39,39,0,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,61,62,54,25,68,68,68,0,0,0,65,0,0,0,0,0,61,13,0,65,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,56,45,46,42,47,48,56,45,46,42,47,48,45,46,45,46,42,47,48,45,46,42,47,48,45,46,42,47,56,56,45,46,42,47,45,46,45,46,42,47,56,45,45,45,46,46,46,42,42,42,47,47,47,48,42,48,45,42,42,45,48,47,56,45,46,42,47,48,56,48,88,48,56,48,56,45,46,45,46,42,47,88,48,43,42,47,45,46,42,47,48,56,45,46,42,47,48,56,45,46,42,47,48,56,45,46,42,47,48,0,0,0,0,0,59,57,58,13,58,59,13,58,59,58,89,57,58,59,13,58,89,13,0,0,0,13,58,59,58,0,13,58,59,57,13,58,13,58,89,13,58,59,13,58,59,13,58,59,0,0,0,0,0,63,63,0,0,0,0,0,62,62,62,62,66,61,62,61,62,62,62,62,62,62,62,62,61,64,66,63,62,61,64,66,63,62,63,62,63,62,62,62,62,64,64,66,62,0,0,0,62,63,62,0,0,62,63,62,62,62,62,62,61,64,66,63,62,64,62,62,62,61,61,62,62,62,61,62,62,61,64,66,63,62,62,62,0,64,64,64,61,64,64,61,61,62,61,62,61,61,0,62,61,0,0,62,0,0,0,62,62,62,63,62,62,61,61,61,64,66,63,62,61,64,66,63,62,61,64,66,63,62,62,64,64,64,67,67,67,0,0,0,67,67,0,0,67,67,67,67,67,67,67,67,67,67,54,67,67,65,25,68,67,54,65,25,68,67,54,25,68,67,54,67,54,67,67,67,68,68,67,67,54,67,54,67,65,65,54,67,67,67,67,67,65,65,25,68,67,54,67,67,67,67,65,67,67,67,67,65,25,68,67,54,25,68,67,67,54,25,65,65,25,54,68,67,67,54,54,67,65,67,67,67,67,67,54,67,65,65,65,0,0,0,0,65,25,68,67,54,65,25,68,67,54,65,25,68,67,54,67,65,54,0,0,0,0,0,15,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,0,73,73,0,78,82,0,0,0,73,0,0,73,82,73,0,0,80,0,0,75,76,78,0,75,0,75,0,0,0,0,73,73,73,0,75,75,75,75,75,75,75,75,75,75,75,75,0,0,77,76,0,76,77,76,77,77,76,0,76,77,76,77,76,76,76,77,76,77,76,77,0,0,0,0,79,78,78,74,80,79,78,74,80,79,78,78,79,74,80,78,74,80,79,80,78,74,80,79,0,78,80,80,0,80,78,78,74,80,79,78,74,80,79,78,74,80,79,0,0,83,82,83,82,83,82,82,0,0,0,83,82,83,82,82,82,83,82,0,0,82,0,82,83,82,83,82,83,0,85,85,0,0,0,85,84,84,71,84,85,71,84,85,84,85,85,85,71,84,84,71,71,84,85,84,84,84,71,71,71,71,84,85,84,71,84,71,84,71,84,84,85,84,71,84,85,71,84,85,71,84,85,0,0,0,0,0,0,0,0,0,72,72,72,0,0,72,0,0,72,0,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72],"f":"`{{}b}`````````{{}d}`````````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}``````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730````````={{nBj}{{Bn{{Af{Bl}}}}}}{{C`Cb}B`}{C`Cd}``0`1``````````{{}Bj}{{BjBj}Bj}{{BjBj}b}10{BjCf}`21{ce{}{}}0000000{BjBj}{{ce}b{}{}}{{BjBj}Ch}2{{BjBj}Cd}{Cj{{Af{Cl}}}}891{{Bjc}b{{D`{}{{Cn{Bj}}}}}}{{BjDb}A`}0000{cc{}}000{Cf{{Bn{Bj}}}}{CfBj}0{cBj{{D`{}{{Cn{Bj}}}}}}{{Bjc}bDd}``>?8<<<<{BjCd}0{{}b}{{CdCd{Af{Cl}}}Bl}>`{{nBj}{{Bn{{Af{Bl}}}}}}{{BjBj}{{Bn{Ch}}}}{{BlCb}B`}{Bl{{Al{Bf}}}}{Bj{{Df{CdCd}}}}{BlCd}`{{BjBj}b}{{BjBjCd}b}{{BjBj}Bj}20{ce{}{}}3{c{{h{e}}}{}{}}0000000{cj{}}00036`9``2222{cc{}}033{{DhCb}B`}{{DjCb}B`}{DhCd}{DjCd}6666551032{Dld}`88{{DnE`}Cd}{Dnb}7{{}b};{{DnEb}b};;:````````````````````````{{}{{Bn{Aj}}}}`{Edb}``3{{}B`}````4`{Efb}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Eh}````````````{EjCd}{ElCd}{ce{}{}}00000000000{EjEd}{ElEn}{EjEj}{ElEl}{EdEd}{EnEn}{{{F`{c}}}{{F`{c}}}{EfFbFdFfFhFj}}{{ce}b{}{}}0000{{EjEj}Ch}{{ElEl}Ch}{{EdEd}Ch}{{EnEn}Ch}``{{EjEj}Cd}{{ElEl}Cd}{{EdEd}Cd}{{EnEn}Cd}?>{{EjDb}A`}{{ElDb}A`}{{EdDb}A`}{{EnDb}A`}{cc{}}0{B`Ej}{EdEj}2{EnEl}{B`El}4{EjEd}{B`Ed}6{ElEn}{B`En}8{Ed{{Bh{Bf}}}}{{{F`{c}}}c{EfFbFdFfFh}}{Ejc{}}{Edc{}}{Ed{{Bh{Fl}}}}23{En{{Fn{B`}}}}{ce{}{}}000000{{{F`{c}}}e{EfFbFdFfFh}{}}``{{cc}{{G`{c}}}{EfFbFdFfFh}}{{cc}{{F`{c}}}{EfFbFdFfFh}}{{{G`{c}}}{{Bn{e}}}{EfFbFdFfFh}{}}{EjB`}{ElB`}{{EjEj}{{Bn{Ch}}}}{{ElEl}{{Bn{Ch}}}}{{EdEd}{{Bn{Ch}}}}{{EnEn}{{Bn{Ch}}}}``{Efb}{Edb}{Enb}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Gb{{Bn{Ed}}}}{Gd{{Bn{Ed}}}}{ce{}{}}00000``{{GbEd}b}{{GdEd}b}{Gf{{An{Gd}}}}{Ajb}``{{AjDb}A`}{{}{{Bn{Aj}}}}{{}b}={cc{}}00{{GdEdEd}b}2999{{}Gb}{EdAj}{{}Gd}```{c{{h{e}}}{}{}}00000{cj{}}00``{Ghd}88````````````{Gjb}{{}Gl}`{{GlGl}Gl}{{GlGl}b}10{GlBf}`21{ce{}{}}000000000{GnGn}{GlGl}{{ce}b{}{}}0{{GlGl}Ch}2{{GlGl}Cd}{{H`Hb{Bh{Bf}}}b}`{Hd{{Af{{An{Gj}}}}}}:```;{{GnGn}Cd}3``{{Glc}b{{D`{}{{Cn{Gl}}}}}}{{GnDb}A`}{{GlDb}A`}0000{cc{}}0000{H`H`}{Bf{{Bn{Gl}}}}{BfGl}0{{{Bh{Bf}}}{{Df{GjB`B`}}}}{GjGj}{cGl{{D`{}{{Cn{Gl}}}}}}{{Glc}bDd}{{GlGl}b}{{GjElElGl}b}{{GlGl}Gl}{{GlGl}Cd}{ce{}{}}0000{GlCd}0{{}B`}{{H`Hb}b}{{H`HbEn}b}`{Gjb}`{{ElElGnGl}H`}{{}Gj}0{GlGl}`{{GlGl}{{Bn{Ch}}}}{{GjH`{Bn{{Bh{Bf}}}}}b}5{{}b}?{{GjEn}b}``{{GlGlCd}b}```?{{GlGl}b}{{GlGl}Gl}??1{GjB`}{{GjEn}{{Bn{Fl}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{H`Hb}b}{{H`HbEn}b}``````````````{{}Hf}{{HfHf}Hf}{{HfHf}b}10{HfBf}``21{ce{}{}}000000000``{HfHf}{FlFl}{{ce}b{}{}}0{{HfHf}Ch}3{{HfHf}Cd}``89{{}Fl}1{FlCd}{{Hfc}b{{D`{}{{Cn{Hf}}}}}}{{HbEn}{{Bn{Fl}}}}0{FlHf}{{HfDb}A`}0000`{cc{}}0000{Bf{{Bn{Hf}}}}{BfHf}0{cHf{{D`{}{{Cn{Hf}}}}}}{B`Hb}{{Hfc}bDd}{{HfHf}b}{{HfHf}Hf}>{ce{}{}}0000{Cbc{}}1{HfCd}0?{CbB`}{{HbEnEdHf}b}{{}Hb}{{{Al{{Bh{Bf}}}}}Cb}{{EdHf}Fl}{Hh{{Bn{c}}}{}}{HfHf}{{HfHf}{{Bn{Ch}}}}{FlEd}{FlCd}>`{{HfHfCd}b}>?>==?{HbB`}{{HbEn}{{Bn{Fl}}}}{{HbEl}{{Bn{Ej}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Eh}{c{{h{e}}}{}{}}000000000{cj{}}0000{{HfHf}Hf}{{HbEn}b};{{}B`}{B`b}0{Cdd}````{ce{}{}}0{{{An{c}}}{{Hj{c}}}{}}{cc{}}`2{c{{An{c}}}{}}::9`````````````{{B`{Fn{B`}}}Hl}{B`Hl}{{BfCf}Hl}{{B`BfB`}Hl}0{BfHl}{Bbd}{{}Hl}00{{HlBb}Hl}1`````````{{}b}{{{Af{Hn}}}b}==```{{}{{Bn{{Af{Hn}}}}}}{{}I`}{{}B`}{Ib{{Af{Hn}}}}{Bbb}4{cc{}}`{ce{}{}}```{{}Id}````9`{Ifb}`:`8`{c{{h{e}}}{}{}}0{cj{}}`445{B`If}5```221{{}If}```{{Ih{Af{Hn}}}b}>7777{Ij{{An{Ih}}}}{Ih{{Bn{{Af{Hn}}}}}}?::99{{}Ih}`777766`````{IlId};;;;;;;;`{{IlB`}b}{In{{An{Il}}}}{Idb}{J`b}{cc{}}000{J`B`}{ce{}{}}000{B`{{Df{B`B`}}}}{{}Il}{IdJ`}`{{}Id}{{J`c}{}Jb}`{c{{h{e}}}{}{}}0000000{cj{}}000```7777{Jd{{Bn{{Af{Hn}}}}}}`{{}{{Bn{{Af{Hn}}}}}}{{}I`}{{}B`}{Jf{{An{Jd}}}}>>{JdIf}`=={{}Jd}{{}b}{Ifb}87::::99```````{JhB`}`{ce{}{}}00000`{JjJj}{{ce}b{}{}}{{JjJj}Cd}{{Hn{Bh{Bf}}}b}``{{{Af{Hn}}}{{Af{Hn}}}}{cc{}}00{JhJj}{JhI`}9{HnB`}`{Hn{{Hj{Jh}}}}:::{JhCd}``{{{Bh{Bf}}}Hn}````<`{c{{h{e}}}{}{}}00000{cj{}}00``{{}B`}0{{}b}``00```00`{{}d}0`0``{{B`B`B`B`B`}I`}{ce{}{}}0{{I`Db}A`}>1```{{I`B`}b}``887`","D":"CGf","p":[[1,"unit"],[1,"never"],[5,"Arguments",1013],[6,"Result",1014],[5,"TypeId",1015],[5,"Stdout",32],[1,"str"],[8,"Result",1013],[5,"BLOCK_DEVICE",45],[10,"BlockDevice",1016],[5,"Arc",1017],[5,"QUEUE_FRAMES",58],[5,"FrameTracker",407],[5,"Vec",1018],[5,"UPSafeCell",728],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",58],[1,"u8"],[1,"slice"],[5,"OpenFlags",109],[5,"OSInode",109],[6,"Option",1019],[10,"File",92],[5,"UserBuffer",594],[1,"bool"],[1,"u32"],[6,"Ordering",1020],[5,"ROOT_INODE",109],[5,"Inode",1021],[17,"Item"],[10,"IntoIterator",1022],[5,"Formatter",1013],[10,"Hasher",1023],[1,"tuple"],[5,"Stdin",205],[5,"Stdout",205],[5,"PanicInfo",1024],[5,"SimpleLogger",230],[5,"Metadata",1025],[5,"Record",1025],[5,"PhysPageNum",284],[10,"StepByOne",284],[5,"String",1026],[5,"PhysAddr",284],[5,"VirtAddr",284],[5,"VirtPageNum",284],[5,"SimpleRange",284],[10,"Copy",1027],[10,"PartialEq",1020],[10,"PartialOrd",1020],[10,"Debug",1013],[10,"Clone",1028],[5,"PageTableEntry",594],[1,"array"],[5,"SimpleRangeIterator",284],[10,"FrameAllocator",407],[5,"StackFrameAllocator",407],[5,"FRAME_ALLOCATOR",407],[5,"Layout",1029],[5,"MemorySet",461],[5,"MapPermission",461],[6,"MapType",461],[5,"MapArea",461],[5,"PageTable",594],[5,"KERNEL_SPACE",461],[5,"PTEFlags",594],[5,"UserBufferIterator",594],[5,"RefMut",1030],[1,"isize"],[5,"TaskControlBlock",923],[5,"TrapContext",996],[5,"INITPROC",764],[5,"PidHandle",845],[5,"TaskContext",808],[5,"TaskManager",821],[5,"TASK_MANAGER",821],[5,"PidAllocator",845],[5,"PID_ALLOCATOR",845],[5,"KernelStack",845],[10,"Sized",1027],[5,"Processor",892],[5,"PROCESSOR",892],[5,"TaskControlBlockInner",923],[6,"TaskStatus",923],[5,"VirtioHal",58],[5,"OSInodeInner",109],[8,"VPNRange",284],[8,"FrameAllocatorImpl",407]],"r":[[22,18],[25,18],[26,18],[42,45],[43,45],[46,58],[93,109],[94,109],[95,205],[96,205],[100,109],[101,109],[242,407],[243,461],[244,461],[245,461],[246,461],[247,461],[248,594],[249,594],[250,284],[251,284],[252,284],[253,594],[254,594],[255,284],[256,284],[266,407],[268,407],[272,461],[277,461],[280,594],[281,594],[282,594],[283,594],[725,728],[766,845],[767,845],[768,845],[769,892],[770,808],[771,821],[774,821],[780,892],[781,892],[782,892],[785,821],[792,845],[797,892],[799,892],[803,892],[981,996]],"b":[[146,"impl-UpperHex-for-OpenFlags"],[147,"impl-Debug-for-OpenFlags"],[148,"impl-Binary-for-OpenFlags"],[149,"impl-Octal-for-OpenFlags"],[150,"impl-LowerHex-for-OpenFlags"],[340,"impl-From%3Cusize%3E-for-PhysAddr"],[341,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[343,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[344,"impl-From%3Cusize%3E-for-VirtAddr"],[346,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[347,"impl-From%3Cusize%3E-for-PhysPageNum"],[349,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[350,"impl-From%3Cusize%3E-for-VirtPageNum"],[515,"impl-Debug-for-MapPermission"],[516,"impl-UpperHex-for-MapPermission"],[517,"impl-Octal-for-MapPermission"],[518,"impl-LowerHex-for-MapPermission"],[519,"impl-Binary-for-MapPermission"],[647,"impl-UpperHex-for-PTEFlags"],[648,"impl-Debug-for-PTEFlags"],[649,"impl-LowerHex-for-PTEFlags"],[650,"impl-Binary-for-PTEFlags"],[651,"impl-Octal-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADoCegABAAAABQAAAAgAAAATABAAJgAOADcAEQBPAA0AYgABAGkAAABsAAAAdAAAAHcAAAB+AAAAgQAKAI4AAACRAAYAnwADAK8AAACxAAEAtQABALwAAAC+AAsAywACANAAAwDYABMA7QAAAO8AAwD0AAEAAgEAAAQBAQAIAQIADgEAABQBAQAXAQAAHQEBACQBAAAmAQAAKwELADkBEwBPAQMAVQEBAFgBAQBbAQEAXgEBAGIBAABnAQAAbwEGAHgBBQB/ARgAmQEBAJ0BEQC1AQAAugEAALwBDADMAQAAzgEBANkBAADcAQAA4gEAAOUBDgD3AQEA+gECAP4BCgAOAgAAFAIBACICAgAmAgEAKwICADICAQA1AgIAOwIBAEACDgBQAgYAWQIBAF0CAgBmAgAAagIJAHUCBQB9AgEAggIAAIQCAACIAgUAlgIAAJgCAAChAgEAqwIAAK0CAACxAgAAtgIBAMACDgDaAgEA4QINAPACAADyAggA/AIAAAUDAAAIAwEACwMAABADAAAYAwAAHAMBACYDAgAqAwEAMgMCADYDAAA4AwAAOwMEAEcDBgBPAwAAUgMAAFQDCABeAwIAbQMAAHADDQB/AwQAiQMAAJUDHAC1AwUAvgMUAN0DAQDnAwIA8gMCAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
