var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCQQHCCCCCCSSSESSEESSSSSHFNNNNHNNNNHHHFNNNNNHNNNNNEEEEEEEEEECECCHCCEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNHNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNNHHHECFNNNNONNNNNSSSSSCCHSHHHHHFFFFONNNNNNNHCOHHNHNNNNNNONNNHNHNOOHNHNOOHCCONNNNNNNNNFNNNNNOOONNNNHPPPFGONNNNNNNNNNNNONNONOOONONNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","lang_items","loader","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","get_app_data","get_num_app","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","remap_test","remove","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translated_byte_buffer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","console_putchar","set_timer","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_SBRK","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_sbrk","sys_yield","TASK_MANAGER","TaskContext","TaskManager","TaskManagerInner","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_current_program_brk","change_program_brk","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","find_next_task","from","from","from","get_current_token","get_current_trap_cx","inner","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","ra","run_first_task","run_first_task","run_next_task","run_next_task","s","sp","suspend_current_and_run_next","switch","task","tasks","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","base_size","borrow","borrow","borrow_mut","borrow_mut","change_program_brk","clone","clone_into","eq","from","from","get_trap_cx","get_user_token","heap_bottom","into","into","memory_set","new","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_into","try_into","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::board"],[20,"os::config"],[31,"os::console"],[41,"os::lang_items"],[42,"os::loader"],[44,"os::logging"],[56,"os::mm"],[75,"os::mm::address"],[195,"os::mm::frame_allocator"],[244,"os::mm::heap_allocator"],[249,"os::mm::memory_set"],[381,"os::mm::page_table"],[479,"os::sbi"],[482,"os::sync"],[484,"os::sync::up"],[495,"os::syscall"],[503,"os::syscall::fs"],[505,"os::syscall::process"],[509,"os::task"],[563,"os::task::context"],[576,"os::task::switch"],[577,"os::task::task"],[611,"os::timer"],[616,"os::trap"],[631,"os::trap::context"],[647,"core::fmt"],[648,"core::result"],[649,"core::any"],[650,"core::panic::panic_info"],[651,"log"],[652,"core::marker"],[653,"core::cmp"],[654,"core::clone"],[655,"core::option"],[656,"core::alloc::layout"],[657,"alloc::sync"],[658,"core::iter::traits::collect"],[659,"core::hash"],[660,"alloc::vec"],[661,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,0,0,0,0,14,14,14,14,14,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,33,18,19,20,21,22,33,18,19,20,21,22,18,19,18,19,20,21,22,18,19,20,21,22,18,19,20,21,33,33,18,19,20,21,18,19,18,19,20,21,33,18,18,18,19,19,19,20,20,20,21,21,21,22,20,22,20,20,22,21,33,18,19,20,21,22,33,22,62,22,33,22,33,18,19,18,19,20,21,62,22,23,21,18,19,20,21,22,33,18,19,20,21,22,33,18,19,20,21,22,33,18,19,20,21,22,0,0,0,0,0,37,35,36,39,36,37,39,36,37,36,63,35,36,37,39,36,63,39,0,0,0,39,36,37,36,0,39,36,37,35,39,36,39,36,63,39,36,37,39,36,37,39,36,37,0,0,0,0,0,45,45,0,0,0,0,0,42,42,42,42,46,41,42,41,43,41,42,42,42,42,42,42,42,42,41,43,46,45,42,41,43,46,45,42,45,42,45,42,42,42,42,43,43,46,42,0,0,0,42,45,42,0,0,42,45,42,42,42,42,42,41,43,46,45,42,42,42,42,41,42,42,42,41,42,42,41,43,46,45,42,42,42,43,43,43,41,43,43,41,41,42,41,42,41,0,42,0,0,42,41,43,0,0,0,42,42,42,45,42,42,41,41,41,43,46,45,42,41,43,46,45,42,41,43,46,45,42,42,43,43,43,51,51,51,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,31,51,51,44,51,31,44,51,31,51,31,51,31,51,51,51,51,51,31,51,31,51,44,44,31,51,51,51,51,51,44,44,51,31,51,51,51,51,44,51,51,51,51,44,51,31,51,51,31,44,44,31,51,51,31,31,51,44,51,51,51,51,51,31,51,44,44,0,44,51,31,44,51,31,44,51,31,51,44,31,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,56,64,58,56,64,58,56,0,0,64,0,0,58,0,56,56,64,58,56,56,56,56,64,58,0,56,0,56,56,59,0,56,0,56,59,59,0,0,0,64,56,64,58,56,64,58,56,64,58,0,59,59,59,59,59,59,59,59,59,59,59,59,0,61,61,61,0,0,60,60,61,60,61,60,61,61,61,60,61,60,60,60,60,61,60,60,60,60,60,61,60,60,61,60,61,60,61,0,0,0,0,0,0,0,0,0,57,57,57,0,0,57,0,0,57,0,57,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"`{{}b}````````{{}d}```````````````````{f{{h{ff}}}}`{ce{}{}}0{cc{}}1{jb}{c{{l{e}}}{}{}}0{cn{}}{{A`Ab}Ad}{Afd}{f{{Aj{Ah}}}}{{}f}`88{{AlAn}B`}{Alb}9=:{{AlBb}b}887``````````````>````````````````{BdB`}{BfB`}============{BdBh}{BfBj}{BdBd}{BfBf}{BhBh}{BjBj}{{{Bl{c}}}{{Bl{c}}}{BnC`CbCdCfCh}}{{ce}b{}{}}0000{{BdBd}Cj}{{BfBf}Cj}{{BhBh}Cj}{{BjBj}Cj}``{{BdBd}B`}{{BfBf}B`}{{BhBh}B`}{{BjBj}B`}?>{{BdCl}Ad}{{BfCl}Ad}{{BhCl}Ad}{{BjCl}Ad}{cc{}}{BhBd}{fBd}2{fBf}3{BjBf}4{BdBh}{fBh}{fBj}{BfBj}88{Bh{{Aj{Ah}}}}{{{Bl{c}}}c{BnC`CbCdCf}}{Bhc{}}{Bh{{Aj{Cn}}}}2{Bj{{D`{f}}}}{ce{}{}}000000{{{Bl{c}}}e{BnC`CbCdCf}{}}``{{cc}{{Db{c}}}{BnC`CbCdCf}}{{cc}{{Bl{c}}}{BnC`CbCdCf}}{{{Db{c}}}{{Dd{e}}}{BnC`CbCdCf}{}}{Bdf}{Bff}{{BdBd}{{Dd{Cj}}}}{{BfBf}{{Dd{Cj}}}}{{BhBh}{{Dd{Cj}}}}{{BjBj}{{Dd{Cj}}}}``{Bnb}{Bjb}<<<<<{c{{l{e}}}{}{}}00000000000{cn{}}00000``````{Df{{Dd{Bh}}}}{Dh{{Dd{Bh}}}}{ce{}{}}00000``{{DfBh}b}{{DhBh}b}{Dj{{Dl{Dh}}}}{Dnb}``{{DnCl}Ad}{{}{{Dd{Dn}}}}{{}b}{Bhb}{cc{}}00{{DhBhBh}b}3:::{{}Df}{BhDn}{{}Dh}```{c{{l{e}}}{}{}}00000{cn{}}00``{E`d}99````````````{Ebb}{{}Ed}{{EbBfBf}B`}{{EfEhBj}b}`{{EdEd}Ed}{{EdEd}b}10{EdAh}`21{ce{}{}}000000000{EjEj}{EdEd}{{ce}b{}{}}0{{EdEd}Cj}2{{EdEd}B`}{{EfEh{Aj{Ah}}}b}`{El{{En{{Dl{Eb}}}}}}:```={{EjEj}B`}3``{{Edc}b{{Fb{}{{F`{Ed}}}}}}{{EjCl}Ad}{{EdCl}Ad}0000{cc{}}0000{Ah{{Dd{Ed}}}}{AhEd}0{{{Aj{Ah}}}{{h{Ebff}}}}{cEd{{Fb{}{{F`{Ed}}}}}}{{Edc}bFd}{{EdEd}b}{{EbBfBfEd}b}{{EdEd}Ed}?{ce{}{}}0000{EdB`}0{{EfEh}b}{{EfEhBj}b}`{Ebb}`{{BfBfEjEd}Ef}{{}Eb}0{EdEd}`{{EdEd}{{Dd{Cj}}}}{{EbEf{Dd{{Aj{Ah}}}}}b}{{}b}=``{{EdEdB`}b}{{EbBfBf}B`}9```=?=<<?{Ebf}{{EbBj}{{Dd{Cn}}}}{c{{l{e}}}{}{}}000000000{cn{}}0000{{EdEd}Ed}?>````````````{{}Ff}{{FfFf}Ff}{{FfFf}b}10{FfAh}``21{ce{}{}}00000{FfFf}{CnCn}{{ce}b{}{}}0{{FfFf}Cj}3{{FfFf}B`}89{{}Cn}1{CnB`}{{Ffc}b{{Fb{}{{F`{Ff}}}}}}{{EhBj}{{Dd{Cn}}}}0{CnFf}{{FfCl}Ad}0000`{cc{}}00{Ah{{Dd{Ff}}}}{AhFf}0{cFf{{Fb{}{{F`{Ff}}}}}}{fEh}{{Ffc}bFd}{{FfFf}b}{{FfFf}Ff}>{ce{}{}}00{FfB`}0>{{EhBjBhFf}b}{{}Eh}{{BhFf}Cn}{FfFf}{{FfFf}{{Dd{Cj}}}}{CnBh}{CnB`}:`{{FfFfB`}b}:;:99;{Ehf}{{EhBj}{{Dd{Cn}}}}{{fAhf}{{Fh{{Aj{Ah}}}}}}{c{{l{e}}}{}{}}00000{cn{}}00?{{EhBj}b}7{fb}0{B`d}```{ce{}{}}0{{{Dl{c}}}{{Fj{c}}}{}}{cc{}}`2{c{{Dl{c}}}{}}887```````{{f{D`{f}}}Fl}`{{fAhf}Fl}{Fnd}{{}Fl}{FnFl}1`````888888{{G`Fn}{{Dd{f}}}}{Fn{{Dd{f}}}}``{{}Gb}{{}f}{GdG`}{{}b}{G`{{Dd{f}}}}==={G`f}{G`Gb}`{ce{}{}}004{G`b}50``5{G`d}61``6```{c{{l{e}}}{}{}}00000{cn{}}00`44{cc{}}{fGf}6```332{{}Gf}```````7777{{GhFn}{{Dd{f}}}}{GjGj}{{ce}b{}{}}{{GjGj}B`}66{GhGb}{Ghf}`==`{{{Aj{Ah}}f}Gh}```>`;;;;::``{{}f}0{{}b}``00```00`{{}d}0`0``{{fffff}Gb}{ce{}{}}0>0```{{Gbf}b}``{c{{l{e}}}{}{}}0{cn{}}`","D":"AOh","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"tuple"],[5,"Arguments",647],[6,"Result",648],[5,"TypeId",649],[5,"Stdout",31],[1,"str"],[8,"Result",647],[5,"PanicInfo",650],[1,"u8"],[1,"slice"],[5,"SimpleLogger",44],[5,"Metadata",651],[1,"bool"],[5,"Record",651],[5,"PhysAddr",75],[5,"VirtAddr",75],[5,"PhysPageNum",75],[5,"VirtPageNum",75],[5,"SimpleRange",75],[10,"StepByOne",75],[10,"Copy",652],[10,"PartialEq",653],[10,"PartialOrd",653],[10,"Debug",647],[10,"Clone",654],[6,"Ordering",653],[5,"Formatter",647],[5,"PageTableEntry",381],[1,"array"],[5,"SimpleRangeIterator",75],[6,"Option",655],[10,"FrameAllocator",195],[5,"StackFrameAllocator",195],[5,"FRAME_ALLOCATOR",195],[5,"UPSafeCell",484],[5,"FrameTracker",195],[5,"Layout",656],[5,"MemorySet",249],[5,"MapPermission",249],[5,"MapArea",249],[5,"PageTable",381],[6,"MapType",249],[5,"KERNEL_SPACE",249],[5,"Arc",657],[17,"Item"],[10,"IntoIterator",658],[10,"Hasher",659],[5,"PTEFlags",381],[5,"Vec",660],[5,"RefMut",661],[1,"isize"],[1,"i32"],[5,"TaskManager",509],[5,"TrapContext",631],[5,"TASK_MANAGER",509],[5,"TaskContext",563],[5,"TaskControlBlock",577],[6,"TaskStatus",577],[8,"VPNRange",75],[8,"FrameAllocatorImpl",195],[5,"TaskManagerInner",509]],"r":[[20,17],[23,17],[24,17],[56,195],[57,249],[58,249],[59,249],[60,249],[61,381],[62,75],[63,75],[64,75],[65,75],[67,195],[73,249],[74,381],[482,484],[510,563],[616,631]],"b":[[130,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[131,"impl-From%3Cusize%3E-for-PhysAddr"],[133,"impl-From%3Cusize%3E-for-VirtAddr"],[135,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[137,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[138,"impl-From%3Cusize%3E-for-PhysPageNum"],[139,"impl-From%3Cusize%3E-for-VirtPageNum"],[140,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[305,"impl-Octal-for-MapPermission"],[306,"impl-UpperHex-for-MapPermission"],[307,"impl-LowerHex-for-MapPermission"],[308,"impl-Debug-for-MapPermission"],[309,"impl-Binary-for-MapPermission"],[424,"impl-Debug-for-PTEFlags"],[425,"impl-LowerHex-for-PTEFlags"],[426,"impl-Octal-for-PTEFlags"],[427,"impl-Binary-for-PTEFlags"],[428,"impl-UpperHex-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIsBRwAHAAAAEgAMACAAAgAlAAQALQAEADMAAAA1AA0ARAAAAEoAAQBNAAAAUgABAFUAAABYACkAgwABAIYAAACIAAAAigADAJAABQCcACcAxQABAMkAEQDhAAAA5gAOAPgAAAD6AAEAAQEFAAgBAgAQAQAAEwEOACUBAQAoAQIALAEKAEABAQBNAQIAUQECAFYBAwBbAQEAXgEEAGYBAQBpARAAewEFAIQBBACPAQEAkwEKAKIBDAC1AQAAtwEAAMABAwDFAQIAyQEAAM4BAQDRAQEA1AEIAN4BAQDjAQAA5gEBAO0BBwD4AQAAAgIGAA8CAAArAggANQIBAD0CAgBCAgIARwIEAE0CAgBSAgIAVwIPAHACAQB6AgEAhAICAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
